#include <C:\Users\nikky\dev\Spout2Sharp\Spout2\SPOUTSDK\SpoutDirectX\SpoutDX\SpoutDX.h>
#include <C:\Users\nikky\dev\Spout2Sharp\Spout2\SPOUTSDK\SpoutGL\Spout.h>
#include <C:\Users\nikky\dev\Spout2Sharp\Spout2\SPOUTSDK\SpoutGL\SpoutCommon.h>
#include <C:\Users\nikky\dev\Spout2Sharp\Spout2\SPOUTSDK\SpoutGL\SpoutCopy.h>
#include <C:\Users\nikky\dev\Spout2Sharp\Spout2\SPOUTSDK\SpoutGL\SpoutDirectX.h>
#include <C:\Users\nikky\dev\Spout2Sharp\Spout2\SPOUTSDK\SpoutGL\SpoutFrameCount.h>
#include <C:\Users\nikky\dev\Spout2Sharp\Spout2\SPOUTSDK\SpoutGL\SpoutGL.h>
#include <C:\Users\nikky\dev\Spout2Sharp\Spout2\SPOUTSDK\SpoutGL\SpoutGLextensions.h>
#include <C:\Users\nikky\dev\Spout2Sharp\Spout2\SPOUTSDK\SpoutGL\SpoutReceiver.h>
#include <C:\Users\nikky\dev\Spout2Sharp\Spout2\SPOUTSDK\SpoutGL\SpoutSender.h>
#include <C:\Users\nikky\dev\Spout2Sharp\Spout2\SPOUTSDK\SpoutGL\SpoutSenderNames.h>
#include <C:\Users\nikky\dev\Spout2Sharp\Spout2\SPOUTSDK\SpoutGL\SpoutSharedMemory.h>
#include <C:\Users\nikky\dev\Spout2Sharp\Spout2\SPOUTSDK\SpoutGL\SpoutUtils.h>
#include <C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\d3d11.h>
#include <new>

struct CD3D11_DEFAULT& (CD3D11_DEFAULT::*_0)(struct CD3D11_DEFAULT&&) = &CD3D11_DEFAULT::operator=;
D3D11_DRAW_INSTANCED_INDIRECT_ARGS& (D3D11_DRAW_INSTANCED_INDIRECT_ARGS::*_1)(D3D11_DRAW_INSTANCED_INDIRECT_ARGS&&) = &D3D11_DRAW_INSTANCED_INDIRECT_ARGS::operator=;
D3D11_DRAW_INDEXED_INSTANCED_INDIRECT_ARGS& (D3D11_DRAW_INDEXED_INSTANCED_INDIRECT_ARGS::*_2)(D3D11_DRAW_INDEXED_INSTANCED_INDIRECT_ARGS&&) = &D3D11_DRAW_INDEXED_INSTANCED_INDIRECT_ARGS::operator=;
extern "C" __declspec(dllexport) void CD3D11_RECT_CD3D11_RECT_L_L_L_L(void* __instance, long Left, long Top, long Right, long Bottom) { ::new (__instance) CD3D11_RECT(Left, Top, Right, Bottom); }
extern "C" __declspec(dllexport) void CD3D11_RECT__CD3D11_RECT(CD3D11_RECT*__instance) { __instance->~CD3D11_RECT(); }
struct CD3D11_RECT& (CD3D11_RECT::*_3)(const struct CD3D11_RECT&) = &CD3D11_RECT::operator=;
extern "C" __declspec(dllexport) void CD3D11_BOX_CD3D11_BOX___1__S_D3D11_BOX(void* __instance, const D3D11_BOX& o) { ::new (__instance) CD3D11_BOX(o); }
extern "C" __declspec(dllexport) void CD3D11_BOX_CD3D11_BOX_L_L_L_L_L_L(void* __instance, long Left, long Top, long Front, long Right, long Bottom, long Back) { ::new (__instance) CD3D11_BOX(Left, Top, Front, Right, Bottom, Back); }
extern "C" __declspec(dllexport) void CD3D11_BOX__CD3D11_BOX(CD3D11_BOX*__instance) { __instance->~CD3D11_BOX(); }
struct CD3D11_BOX& (CD3D11_BOX::*_4)(const struct CD3D11_BOX&) = &CD3D11_BOX::operator=;
extern "C" __declspec(dllexport) void CD3D11_DEPTH_STENCIL_DESC_CD3D11_DEPTH_STENCIL_DESC___1__S_D3D11_DEPTH_STENCIL_DESC(void* __instance, const D3D11_DEPTH_STENCIL_DESC& o) { ::new (__instance) CD3D11_DEPTH_STENCIL_DESC(o); }
extern "C" __declspec(dllexport) void CD3D11_DEPTH_STENCIL_DESC_CD3D11_DEPTH_STENCIL_DESC___S_CD3D11_DEFAULT(void* __instance, CD3D11_DEFAULT _0) { ::new (__instance) CD3D11_DEPTH_STENCIL_DESC(_0); }
extern "C" __declspec(dllexport) void CD3D11_DEPTH_STENCIL_DESC_CD3D11_DEPTH_STENCIL_DESC_I___E_D3D11_DEPTH_WRITE_MASK___E_D3D11_COMPARISON_FUNC_I_c_c___E_D3D11_STENCIL_OP_S2__S2__S1__S2__S2__S2__S1(void* __instance, int depthEnable, D3D11_DEPTH_WRITE_MASK depthWriteMask, D3D11_COMPARISON_FUNC depthFunc, int stencilEnable, unsigned char stencilReadMask, unsigned char stencilWriteMask, D3D11_STENCIL_OP frontStencilFailOp, D3D11_STENCIL_OP frontStencilDepthFailOp, D3D11_STENCIL_OP frontStencilPassOp, D3D11_COMPARISON_FUNC frontStencilFunc, D3D11_STENCIL_OP backStencilFailOp, D3D11_STENCIL_OP backStencilDepthFailOp, D3D11_STENCIL_OP backStencilPassOp, D3D11_COMPARISON_FUNC backStencilFunc) { ::new (__instance) CD3D11_DEPTH_STENCIL_DESC(depthEnable, depthWriteMask, depthFunc, stencilEnable, stencilReadMask, stencilWriteMask, frontStencilFailOp, frontStencilDepthFailOp, frontStencilPassOp, frontStencilFunc, backStencilFailOp, backStencilDepthFailOp, backStencilPassOp, backStencilFunc); }
extern "C" __declspec(dllexport) void CD3D11_DEPTH_STENCIL_DESC__CD3D11_DEPTH_STENCIL_DESC(CD3D11_DEPTH_STENCIL_DESC*__instance) { __instance->~CD3D11_DEPTH_STENCIL_DESC(); }
struct CD3D11_DEPTH_STENCIL_DESC& (CD3D11_DEPTH_STENCIL_DESC::*_5)(const struct CD3D11_DEPTH_STENCIL_DESC&) = &CD3D11_DEPTH_STENCIL_DESC::operator=;
extern "C" __declspec(dllexport) void CD3D11_BLEND_DESC_CD3D11_BLEND_DESC___1__S_D3D11_BLEND_DESC(void* __instance, const D3D11_BLEND_DESC& o) { ::new (__instance) CD3D11_BLEND_DESC(o); }
extern "C" __declspec(dllexport) void CD3D11_BLEND_DESC_CD3D11_BLEND_DESC___S_CD3D11_DEFAULT(void* __instance, CD3D11_DEFAULT _0) { ::new (__instance) CD3D11_BLEND_DESC(_0); }
extern "C" __declspec(dllexport) void CD3D11_BLEND_DESC__CD3D11_BLEND_DESC(CD3D11_BLEND_DESC*__instance) { __instance->~CD3D11_BLEND_DESC(); }
struct CD3D11_BLEND_DESC& (CD3D11_BLEND_DESC::*_6)(const struct CD3D11_BLEND_DESC&) = &CD3D11_BLEND_DESC::operator=;
extern "C" __declspec(dllexport) void CD3D11_RASTERIZER_DESC_CD3D11_RASTERIZER_DESC___1__S_D3D11_RASTERIZER_DESC(void* __instance, const D3D11_RASTERIZER_DESC& o) { ::new (__instance) CD3D11_RASTERIZER_DESC(o); }
extern "C" __declspec(dllexport) void CD3D11_RASTERIZER_DESC_CD3D11_RASTERIZER_DESC___S_CD3D11_DEFAULT(void* __instance, CD3D11_DEFAULT _0) { ::new (__instance) CD3D11_RASTERIZER_DESC(_0); }
extern "C" __declspec(dllexport) void CD3D11_RASTERIZER_DESC_CD3D11_RASTERIZER_DESC___E_D3D11_FILL_MODE___E_D3D11_CULL_MODE_I_I_f_f_I_I_I_I(void* __instance, D3D11_FILL_MODE fillMode, D3D11_CULL_MODE cullMode, int frontCounterClockwise, int depthBias, float depthBiasClamp, float slopeScaledDepthBias, int depthClipEnable, int scissorEnable, int multisampleEnable, int antialiasedLineEnable) { ::new (__instance) CD3D11_RASTERIZER_DESC(fillMode, cullMode, frontCounterClockwise, depthBias, depthBiasClamp, slopeScaledDepthBias, depthClipEnable, scissorEnable, multisampleEnable, antialiasedLineEnable); }
extern "C" __declspec(dllexport) void CD3D11_RASTERIZER_DESC__CD3D11_RASTERIZER_DESC(CD3D11_RASTERIZER_DESC*__instance) { __instance->~CD3D11_RASTERIZER_DESC(); }
struct CD3D11_RASTERIZER_DESC& (CD3D11_RASTERIZER_DESC::*_7)(const struct CD3D11_RASTERIZER_DESC&) = &CD3D11_RASTERIZER_DESC::operator=;
extern "C" __declspec(dllexport) void CD3D11_BUFFER_DESC_CD3D11_BUFFER_DESC___1__S_D3D11_BUFFER_DESC(void* __instance, const D3D11_BUFFER_DESC& o) { ::new (__instance) CD3D11_BUFFER_DESC(o); }
extern "C" __declspec(dllexport) void CD3D11_BUFFER_DESC_CD3D11_BUFFER_DESC_i_i___E_D3D11_USAGE_i_i_i(void* __instance, unsigned int byteWidth, unsigned int bindFlags, D3D11_USAGE usage, unsigned int cpuaccessFlags, unsigned int miscFlags, unsigned int structureByteStride) { ::new (__instance) CD3D11_BUFFER_DESC(byteWidth, bindFlags, usage, cpuaccessFlags, miscFlags, structureByteStride); }
extern "C" __declspec(dllexport) void CD3D11_BUFFER_DESC__CD3D11_BUFFER_DESC(CD3D11_BUFFER_DESC*__instance) { __instance->~CD3D11_BUFFER_DESC(); }
struct CD3D11_BUFFER_DESC& (CD3D11_BUFFER_DESC::*_8)(const struct CD3D11_BUFFER_DESC&) = &CD3D11_BUFFER_DESC::operator=;
extern "C" __declspec(dllexport) void CD3D11_TEXTURE1D_DESC_CD3D11_TEXTURE1D_DESC___1__S_D3D11_TEXTURE1D_DESC(void* __instance, const D3D11_TEXTURE1D_DESC& o) { ::new (__instance) CD3D11_TEXTURE1D_DESC(o); }
extern "C" __declspec(dllexport) void CD3D11_TEXTURE1D_DESC__CD3D11_TEXTURE1D_DESC(CD3D11_TEXTURE1D_DESC*__instance) { __instance->~CD3D11_TEXTURE1D_DESC(); }
struct CD3D11_TEXTURE1D_DESC& (CD3D11_TEXTURE1D_DESC::*_9)(const struct CD3D11_TEXTURE1D_DESC&) = &CD3D11_TEXTURE1D_DESC::operator=;
extern "C" __declspec(dllexport) void CD3D11_TEXTURE2D_DESC_CD3D11_TEXTURE2D_DESC___1__S_D3D11_TEXTURE2D_DESC(void* __instance, const D3D11_TEXTURE2D_DESC& o) { ::new (__instance) CD3D11_TEXTURE2D_DESC(o); }
extern "C" __declspec(dllexport) void CD3D11_TEXTURE2D_DESC__CD3D11_TEXTURE2D_DESC(CD3D11_TEXTURE2D_DESC*__instance) { __instance->~CD3D11_TEXTURE2D_DESC(); }
struct CD3D11_TEXTURE2D_DESC& (CD3D11_TEXTURE2D_DESC::*_10)(const struct CD3D11_TEXTURE2D_DESC&) = &CD3D11_TEXTURE2D_DESC::operator=;
extern "C" __declspec(dllexport) void CD3D11_TEXTURE3D_DESC_CD3D11_TEXTURE3D_DESC___1__S_D3D11_TEXTURE3D_DESC(void* __instance, const D3D11_TEXTURE3D_DESC& o) { ::new (__instance) CD3D11_TEXTURE3D_DESC(o); }
extern "C" __declspec(dllexport) void CD3D11_TEXTURE3D_DESC__CD3D11_TEXTURE3D_DESC(CD3D11_TEXTURE3D_DESC*__instance) { __instance->~CD3D11_TEXTURE3D_DESC(); }
struct CD3D11_TEXTURE3D_DESC& (CD3D11_TEXTURE3D_DESC::*_11)(const struct CD3D11_TEXTURE3D_DESC&) = &CD3D11_TEXTURE3D_DESC::operator=;
extern "C" __declspec(dllexport) void CD3D11_SHADER_RESOURCE_VIEW_DESC_CD3D11_SHADER_RESOURCE_VIEW_DESC___1__S_D3D11_SHADER_RESOURCE_VIEW_DESC(void* __instance, const D3D11_SHADER_RESOURCE_VIEW_DESC& o) { ::new (__instance) CD3D11_SHADER_RESOURCE_VIEW_DESC(o); }
extern "C" __declspec(dllexport) void CD3D11_SHADER_RESOURCE_VIEW_DESC__CD3D11_SHADER_RESOURCE_VIEW_DESC(CD3D11_SHADER_RESOURCE_VIEW_DESC*__instance) { __instance->~CD3D11_SHADER_RESOURCE_VIEW_DESC(); }
struct CD3D11_SHADER_RESOURCE_VIEW_DESC& (CD3D11_SHADER_RESOURCE_VIEW_DESC::*_12)(const struct CD3D11_SHADER_RESOURCE_VIEW_DESC&) = &CD3D11_SHADER_RESOURCE_VIEW_DESC::operator=;
extern "C" __declspec(dllexport) void CD3D11_RENDER_TARGET_VIEW_DESC_CD3D11_RENDER_TARGET_VIEW_DESC___1__S_D3D11_RENDER_TARGET_VIEW_DESC(void* __instance, const D3D11_RENDER_TARGET_VIEW_DESC& o) { ::new (__instance) CD3D11_RENDER_TARGET_VIEW_DESC(o); }
extern "C" __declspec(dllexport) void CD3D11_RENDER_TARGET_VIEW_DESC__CD3D11_RENDER_TARGET_VIEW_DESC(CD3D11_RENDER_TARGET_VIEW_DESC*__instance) { __instance->~CD3D11_RENDER_TARGET_VIEW_DESC(); }
struct CD3D11_RENDER_TARGET_VIEW_DESC& (CD3D11_RENDER_TARGET_VIEW_DESC::*_13)(const struct CD3D11_RENDER_TARGET_VIEW_DESC&) = &CD3D11_RENDER_TARGET_VIEW_DESC::operator=;
extern "C" __declspec(dllexport) void CD3D11_VIEWPORT_CD3D11_VIEWPORT___1__S_D3D11_VIEWPORT(void* __instance, const D3D11_VIEWPORT& o) { ::new (__instance) CD3D11_VIEWPORT(o); }
extern "C" __declspec(dllexport) void CD3D11_VIEWPORT_CD3D11_VIEWPORT_f_f_f_f_f_f(void* __instance, float topLeftX, float topLeftY, float width, float height, float minDepth, float maxDepth) { ::new (__instance) CD3D11_VIEWPORT(topLeftX, topLeftY, width, height, minDepth, maxDepth); }
extern "C" __declspec(dllexport) void CD3D11_VIEWPORT__CD3D11_VIEWPORT(CD3D11_VIEWPORT*__instance) { __instance->~CD3D11_VIEWPORT(); }
struct CD3D11_VIEWPORT& (CD3D11_VIEWPORT::*_14)(const struct CD3D11_VIEWPORT&) = &CD3D11_VIEWPORT::operator=;
extern "C" __declspec(dllexport) void CD3D11_DEPTH_STENCIL_VIEW_DESC_CD3D11_DEPTH_STENCIL_VIEW_DESC___1__S_D3D11_DEPTH_STENCIL_VIEW_DESC(void* __instance, const D3D11_DEPTH_STENCIL_VIEW_DESC& o) { ::new (__instance) CD3D11_DEPTH_STENCIL_VIEW_DESC(o); }
extern "C" __declspec(dllexport) void CD3D11_DEPTH_STENCIL_VIEW_DESC__CD3D11_DEPTH_STENCIL_VIEW_DESC(CD3D11_DEPTH_STENCIL_VIEW_DESC*__instance) { __instance->~CD3D11_DEPTH_STENCIL_VIEW_DESC(); }
struct CD3D11_DEPTH_STENCIL_VIEW_DESC& (CD3D11_DEPTH_STENCIL_VIEW_DESC::*_15)(const struct CD3D11_DEPTH_STENCIL_VIEW_DESC&) = &CD3D11_DEPTH_STENCIL_VIEW_DESC::operator=;
extern "C" __declspec(dllexport) void CD3D11_UNORDERED_ACCESS_VIEW_DESC_CD3D11_UNORDERED_ACCESS_VIEW_DESC___1__S_D3D11_UNORDERED_ACCESS_VIEW_DESC(void* __instance, const D3D11_UNORDERED_ACCESS_VIEW_DESC& o) { ::new (__instance) CD3D11_UNORDERED_ACCESS_VIEW_DESC(o); }
extern "C" __declspec(dllexport) void CD3D11_UNORDERED_ACCESS_VIEW_DESC__CD3D11_UNORDERED_ACCESS_VIEW_DESC(CD3D11_UNORDERED_ACCESS_VIEW_DESC*__instance) { __instance->~CD3D11_UNORDERED_ACCESS_VIEW_DESC(); }
struct CD3D11_UNORDERED_ACCESS_VIEW_DESC& (CD3D11_UNORDERED_ACCESS_VIEW_DESC::*_16)(const struct CD3D11_UNORDERED_ACCESS_VIEW_DESC&) = &CD3D11_UNORDERED_ACCESS_VIEW_DESC::operator=;
extern "C" __declspec(dllexport) void CD3D11_SAMPLER_DESC_CD3D11_SAMPLER_DESC___1__S_D3D11_SAMPLER_DESC(void* __instance, const D3D11_SAMPLER_DESC& o) { ::new (__instance) CD3D11_SAMPLER_DESC(o); }
extern "C" __declspec(dllexport) void CD3D11_SAMPLER_DESC_CD3D11_SAMPLER_DESC___S_CD3D11_DEFAULT(void* __instance, CD3D11_DEFAULT _0) { ::new (__instance) CD3D11_SAMPLER_DESC(_0); }
extern "C" __declspec(dllexport) void CD3D11_SAMPLER_DESC_CD3D11_SAMPLER_DESC___E_D3D11_FILTER___E_D3D11_TEXTURE_ADDRESS_MODE_S1__S1__f_i___E_D3D11_COMPARISON_FUNC__1f_f_f(void* __instance, D3D11_FILTER filter, D3D11_TEXTURE_ADDRESS_MODE addressU, D3D11_TEXTURE_ADDRESS_MODE addressV, D3D11_TEXTURE_ADDRESS_MODE addressW, float mipLODBias, unsigned int maxAnisotropy, D3D11_COMPARISON_FUNC comparisonFunc, const float* borderColor, float minLOD, float maxLOD) { ::new (__instance) CD3D11_SAMPLER_DESC(filter, addressU, addressV, addressW, mipLODBias, maxAnisotropy, comparisonFunc, borderColor, minLOD, maxLOD); }
extern "C" __declspec(dllexport) void CD3D11_SAMPLER_DESC__CD3D11_SAMPLER_DESC(CD3D11_SAMPLER_DESC*__instance) { __instance->~CD3D11_SAMPLER_DESC(); }
struct CD3D11_SAMPLER_DESC& (CD3D11_SAMPLER_DESC::*_17)(const struct CD3D11_SAMPLER_DESC&) = &CD3D11_SAMPLER_DESC::operator=;
extern "C" __declspec(dllexport) void CD3D11_QUERY_DESC_CD3D11_QUERY_DESC___1__S_D3D11_QUERY_DESC(void* __instance, const D3D11_QUERY_DESC& o) { ::new (__instance) CD3D11_QUERY_DESC(o); }
extern "C" __declspec(dllexport) void CD3D11_QUERY_DESC_CD3D11_QUERY_DESC___E_D3D11_QUERY_i(void* __instance, D3D11_QUERY query, unsigned int miscFlags) { ::new (__instance) CD3D11_QUERY_DESC(query, miscFlags); }
extern "C" __declspec(dllexport) void CD3D11_QUERY_DESC__CD3D11_QUERY_DESC(CD3D11_QUERY_DESC*__instance) { __instance->~CD3D11_QUERY_DESC(); }
struct CD3D11_QUERY_DESC& (CD3D11_QUERY_DESC::*_18)(const struct CD3D11_QUERY_DESC&) = &CD3D11_QUERY_DESC::operator=;
D3D11_QUERY_DATA_TIMESTAMP_DISJOINT& (D3D11_QUERY_DATA_TIMESTAMP_DISJOINT::*_19)(D3D11_QUERY_DATA_TIMESTAMP_DISJOINT&&) = &D3D11_QUERY_DATA_TIMESTAMP_DISJOINT::operator=;
D3D11_QUERY_DATA_PIPELINE_STATISTICS& (D3D11_QUERY_DATA_PIPELINE_STATISTICS::*_20)(D3D11_QUERY_DATA_PIPELINE_STATISTICS&&) = &D3D11_QUERY_DATA_PIPELINE_STATISTICS::operator=;
D3D11_QUERY_DATA_SO_STATISTICS& (D3D11_QUERY_DATA_SO_STATISTICS::*_21)(D3D11_QUERY_DATA_SO_STATISTICS&&) = &D3D11_QUERY_DATA_SO_STATISTICS::operator=;
extern "C" __declspec(dllexport) void CD3D11_COUNTER_DESC_CD3D11_COUNTER_DESC___1__S_D3D11_COUNTER_DESC(void* __instance, const D3D11_COUNTER_DESC& o) { ::new (__instance) CD3D11_COUNTER_DESC(o); }
extern "C" __declspec(dllexport) void CD3D11_COUNTER_DESC_CD3D11_COUNTER_DESC___E_D3D11_COUNTER_i(void* __instance, D3D11_COUNTER counter, unsigned int miscFlags) { ::new (__instance) CD3D11_COUNTER_DESC(counter, miscFlags); }
extern "C" __declspec(dllexport) void CD3D11_COUNTER_DESC__CD3D11_COUNTER_DESC(CD3D11_COUNTER_DESC*__instance) { __instance->~CD3D11_COUNTER_DESC(); }
struct CD3D11_COUNTER_DESC& (CD3D11_COUNTER_DESC::*_22)(const struct CD3D11_COUNTER_DESC&) = &CD3D11_COUNTER_DESC::operator=;
D3D11_FEATURE_DATA_THREADING& (D3D11_FEATURE_DATA_THREADING::*_23)(D3D11_FEATURE_DATA_THREADING&&) = &D3D11_FEATURE_DATA_THREADING::operator=;
D3D11_FEATURE_DATA_DOUBLES& (D3D11_FEATURE_DATA_DOUBLES::*_24)(D3D11_FEATURE_DATA_DOUBLES&&) = &D3D11_FEATURE_DATA_DOUBLES::operator=;
D3D11_FEATURE_DATA_FORMAT_SUPPORT& (D3D11_FEATURE_DATA_FORMAT_SUPPORT::*_25)(D3D11_FEATURE_DATA_FORMAT_SUPPORT&&) = &D3D11_FEATURE_DATA_FORMAT_SUPPORT::operator=;
D3D11_FEATURE_DATA_FORMAT_SUPPORT2& (D3D11_FEATURE_DATA_FORMAT_SUPPORT2::*_26)(D3D11_FEATURE_DATA_FORMAT_SUPPORT2&&) = &D3D11_FEATURE_DATA_FORMAT_SUPPORT2::operator=;
D3D11_FEATURE_DATA_D3D10_X_HARDWARE_OPTIONS& (D3D11_FEATURE_DATA_D3D10_X_HARDWARE_OPTIONS::*_27)(D3D11_FEATURE_DATA_D3D10_X_HARDWARE_OPTIONS&&) = &D3D11_FEATURE_DATA_D3D10_X_HARDWARE_OPTIONS::operator=;
D3D11_FEATURE_DATA_D3D11_OPTIONS& (D3D11_FEATURE_DATA_D3D11_OPTIONS::*_28)(D3D11_FEATURE_DATA_D3D11_OPTIONS&&) = &D3D11_FEATURE_DATA_D3D11_OPTIONS::operator=;
D3D11_FEATURE_DATA_ARCHITECTURE_INFO& (D3D11_FEATURE_DATA_ARCHITECTURE_INFO::*_29)(D3D11_FEATURE_DATA_ARCHITECTURE_INFO&&) = &D3D11_FEATURE_DATA_ARCHITECTURE_INFO::operator=;
D3D11_FEATURE_DATA_D3D9_OPTIONS& (D3D11_FEATURE_DATA_D3D9_OPTIONS::*_30)(D3D11_FEATURE_DATA_D3D9_OPTIONS&&) = &D3D11_FEATURE_DATA_D3D9_OPTIONS::operator=;
D3D11_FEATURE_DATA_D3D9_SHADOW_SUPPORT& (D3D11_FEATURE_DATA_D3D9_SHADOW_SUPPORT::*_31)(D3D11_FEATURE_DATA_D3D9_SHADOW_SUPPORT&&) = &D3D11_FEATURE_DATA_D3D9_SHADOW_SUPPORT::operator=;
D3D11_FEATURE_DATA_SHADER_MIN_PRECISION_SUPPORT& (D3D11_FEATURE_DATA_SHADER_MIN_PRECISION_SUPPORT::*_32)(D3D11_FEATURE_DATA_SHADER_MIN_PRECISION_SUPPORT&&) = &D3D11_FEATURE_DATA_SHADER_MIN_PRECISION_SUPPORT::operator=;
D3D11_FEATURE_DATA_D3D11_OPTIONS1& (D3D11_FEATURE_DATA_D3D11_OPTIONS1::*_33)(D3D11_FEATURE_DATA_D3D11_OPTIONS1&&) = &D3D11_FEATURE_DATA_D3D11_OPTIONS1::operator=;
D3D11_FEATURE_DATA_D3D9_SIMPLE_INSTANCING_SUPPORT& (D3D11_FEATURE_DATA_D3D9_SIMPLE_INSTANCING_SUPPORT::*_34)(D3D11_FEATURE_DATA_D3D9_SIMPLE_INSTANCING_SUPPORT&&) = &D3D11_FEATURE_DATA_D3D9_SIMPLE_INSTANCING_SUPPORT::operator=;
D3D11_FEATURE_DATA_MARKER_SUPPORT& (D3D11_FEATURE_DATA_MARKER_SUPPORT::*_35)(D3D11_FEATURE_DATA_MARKER_SUPPORT&&) = &D3D11_FEATURE_DATA_MARKER_SUPPORT::operator=;
D3D11_FEATURE_DATA_D3D9_OPTIONS1& (D3D11_FEATURE_DATA_D3D9_OPTIONS1::*_36)(D3D11_FEATURE_DATA_D3D9_OPTIONS1&&) = &D3D11_FEATURE_DATA_D3D9_OPTIONS1::operator=;
D3D11_FEATURE_DATA_D3D11_OPTIONS2& (D3D11_FEATURE_DATA_D3D11_OPTIONS2::*_37)(D3D11_FEATURE_DATA_D3D11_OPTIONS2&&) = &D3D11_FEATURE_DATA_D3D11_OPTIONS2::operator=;
D3D11_FEATURE_DATA_D3D11_OPTIONS3& (D3D11_FEATURE_DATA_D3D11_OPTIONS3::*_38)(D3D11_FEATURE_DATA_D3D11_OPTIONS3&&) = &D3D11_FEATURE_DATA_D3D11_OPTIONS3::operator=;
D3D11_FEATURE_DATA_GPU_VIRTUAL_ADDRESS_SUPPORT& (D3D11_FEATURE_DATA_GPU_VIRTUAL_ADDRESS_SUPPORT::*_39)(D3D11_FEATURE_DATA_GPU_VIRTUAL_ADDRESS_SUPPORT&&) = &D3D11_FEATURE_DATA_GPU_VIRTUAL_ADDRESS_SUPPORT::operator=;
D3D11_FEATURE_DATA_SHADER_CACHE& (D3D11_FEATURE_DATA_SHADER_CACHE::*_40)(D3D11_FEATURE_DATA_SHADER_CACHE&&) = &D3D11_FEATURE_DATA_SHADER_CACHE::operator=;
D3D11_FEATURE_DATA_DISPLAYABLE& (D3D11_FEATURE_DATA_DISPLAYABLE::*_41)(D3D11_FEATURE_DATA_DISPLAYABLE&&) = &D3D11_FEATURE_DATA_DISPLAYABLE::operator=;
D3D11_FEATURE_DATA_D3D11_OPTIONS5& (D3D11_FEATURE_DATA_D3D11_OPTIONS5::*_42)(D3D11_FEATURE_DATA_D3D11_OPTIONS5&&) = &D3D11_FEATURE_DATA_D3D11_OPTIONS5::operator=;
struct CD3D11_VIDEO_DEFAULT& (CD3D11_VIDEO_DEFAULT::*_43)(struct CD3D11_VIDEO_DEFAULT&&) = &CD3D11_VIDEO_DEFAULT::operator=;
D3D11_VIDEO_DECODER_DESC& (D3D11_VIDEO_DECODER_DESC::*_44)(D3D11_VIDEO_DECODER_DESC&&) = &D3D11_VIDEO_DECODER_DESC::operator=;
D3D11_VIDEO_DECODER_CONFIG& (D3D11_VIDEO_DECODER_CONFIG::*_45)(D3D11_VIDEO_DECODER_CONFIG&&) = &D3D11_VIDEO_DECODER_CONFIG::operator=;
struct _D3D11_AES_CTR_IV& (_D3D11_AES_CTR_IV::*_46)(struct _D3D11_AES_CTR_IV&&) = &_D3D11_AES_CTR_IV::operator=;
D3D11_ENCRYPTED_BLOCK_INFO& (D3D11_ENCRYPTED_BLOCK_INFO::*_47)(D3D11_ENCRYPTED_BLOCK_INFO&&) = &D3D11_ENCRYPTED_BLOCK_INFO::operator=;
D3D11_VIDEO_DECODER_BUFFER_DESC& (D3D11_VIDEO_DECODER_BUFFER_DESC::*_48)(D3D11_VIDEO_DECODER_BUFFER_DESC&&) = &D3D11_VIDEO_DECODER_BUFFER_DESC::operator=;
D3D11_VIDEO_DECODER_EXTENSION& (D3D11_VIDEO_DECODER_EXTENSION::*_49)(D3D11_VIDEO_DECODER_EXTENSION&&) = &D3D11_VIDEO_DECODER_EXTENSION::operator=;
D3D11_VIDEO_PROCESSOR_CAPS& (D3D11_VIDEO_PROCESSOR_CAPS::*_50)(D3D11_VIDEO_PROCESSOR_CAPS&&) = &D3D11_VIDEO_PROCESSOR_CAPS::operator=;
D3D11_VIDEO_PROCESSOR_RATE_CONVERSION_CAPS& (D3D11_VIDEO_PROCESSOR_RATE_CONVERSION_CAPS::*_51)(D3D11_VIDEO_PROCESSOR_RATE_CONVERSION_CAPS&&) = &D3D11_VIDEO_PROCESSOR_RATE_CONVERSION_CAPS::operator=;
D3D11_VIDEO_CONTENT_PROTECTION_CAPS& (D3D11_VIDEO_CONTENT_PROTECTION_CAPS::*_52)(D3D11_VIDEO_CONTENT_PROTECTION_CAPS&&) = &D3D11_VIDEO_CONTENT_PROTECTION_CAPS::operator=;
D3D11_VIDEO_PROCESSOR_CUSTOM_RATE& (D3D11_VIDEO_PROCESSOR_CUSTOM_RATE::*_53)(D3D11_VIDEO_PROCESSOR_CUSTOM_RATE&&) = &D3D11_VIDEO_PROCESSOR_CUSTOM_RATE::operator=;
D3D11_VIDEO_PROCESSOR_FILTER_RANGE& (D3D11_VIDEO_PROCESSOR_FILTER_RANGE::*_54)(D3D11_VIDEO_PROCESSOR_FILTER_RANGE&&) = &D3D11_VIDEO_PROCESSOR_FILTER_RANGE::operator=;
D3D11_VIDEO_PROCESSOR_CONTENT_DESC& (D3D11_VIDEO_PROCESSOR_CONTENT_DESC::*_55)(D3D11_VIDEO_PROCESSOR_CONTENT_DESC&&) = &D3D11_VIDEO_PROCESSOR_CONTENT_DESC::operator=;
D3D11_VIDEO_COLOR_RGBA& (D3D11_VIDEO_COLOR_RGBA::*_56)(D3D11_VIDEO_COLOR_RGBA&&) = &D3D11_VIDEO_COLOR_RGBA::operator=;
D3D11_VIDEO_COLOR_YCbCrA& (D3D11_VIDEO_COLOR_YCbCrA::*_57)(D3D11_VIDEO_COLOR_YCbCrA&&) = &D3D11_VIDEO_COLOR_YCbCrA::operator=;
D3D11_VIDEO_COLOR& (D3D11_VIDEO_COLOR::*_58)(D3D11_VIDEO_COLOR&&) = &D3D11_VIDEO_COLOR::operator=;
D3D11_VIDEO_PROCESSOR_COLOR_SPACE& (D3D11_VIDEO_PROCESSOR_COLOR_SPACE::*_59)(D3D11_VIDEO_PROCESSOR_COLOR_SPACE&&) = &D3D11_VIDEO_PROCESSOR_COLOR_SPACE::operator=;
D3D11_VIDEO_PROCESSOR_STREAM& (D3D11_VIDEO_PROCESSOR_STREAM::*_60)(D3D11_VIDEO_PROCESSOR_STREAM&&) = &D3D11_VIDEO_PROCESSOR_STREAM::operator=;
D3D11_OMAC& (D3D11_OMAC::*_61)(D3D11_OMAC&&) = &D3D11_OMAC::operator=;
D3D11_AUTHENTICATED_QUERY_INPUT& (D3D11_AUTHENTICATED_QUERY_INPUT::*_62)(D3D11_AUTHENTICATED_QUERY_INPUT&&) = &D3D11_AUTHENTICATED_QUERY_INPUT::operator=;
D3D11_AUTHENTICATED_QUERY_OUTPUT& (D3D11_AUTHENTICATED_QUERY_OUTPUT::*_63)(D3D11_AUTHENTICATED_QUERY_OUTPUT&&) = &D3D11_AUTHENTICATED_QUERY_OUTPUT::operator=;
struct D3D11_AUTHENTICATED_PROTECTION_FLAGS::__MIDL___MIDL_itf_d3d11_0000_0034_0001& (D3D11_AUTHENTICATED_PROTECTION_FLAGS::__MIDL___MIDL_itf_d3d11_0000_0034_0001::*_64)(struct D3D11_AUTHENTICATED_PROTECTION_FLAGS::__MIDL___MIDL_itf_d3d11_0000_0034_0001&&) = &D3D11_AUTHENTICATED_PROTECTION_FLAGS::__MIDL___MIDL_itf_d3d11_0000_0034_0001::operator=;
D3D11_AUTHENTICATED_PROTECTION_FLAGS& (D3D11_AUTHENTICATED_PROTECTION_FLAGS::*_65)(D3D11_AUTHENTICATED_PROTECTION_FLAGS&&) = &D3D11_AUTHENTICATED_PROTECTION_FLAGS::operator=;
D3D11_AUTHENTICATED_QUERY_PROTECTION_OUTPUT& (D3D11_AUTHENTICATED_QUERY_PROTECTION_OUTPUT::*_66)(D3D11_AUTHENTICATED_QUERY_PROTECTION_OUTPUT&&) = &D3D11_AUTHENTICATED_QUERY_PROTECTION_OUTPUT::operator=;
D3D11_AUTHENTICATED_QUERY_CHANNEL_TYPE_OUTPUT& (D3D11_AUTHENTICATED_QUERY_CHANNEL_TYPE_OUTPUT::*_67)(D3D11_AUTHENTICATED_QUERY_CHANNEL_TYPE_OUTPUT&&) = &D3D11_AUTHENTICATED_QUERY_CHANNEL_TYPE_OUTPUT::operator=;
D3D11_AUTHENTICATED_QUERY_DEVICE_HANDLE_OUTPUT& (D3D11_AUTHENTICATED_QUERY_DEVICE_HANDLE_OUTPUT::*_68)(D3D11_AUTHENTICATED_QUERY_DEVICE_HANDLE_OUTPUT&&) = &D3D11_AUTHENTICATED_QUERY_DEVICE_HANDLE_OUTPUT::operator=;
D3D11_AUTHENTICATED_QUERY_CRYPTO_SESSION_INPUT& (D3D11_AUTHENTICATED_QUERY_CRYPTO_SESSION_INPUT::*_69)(D3D11_AUTHENTICATED_QUERY_CRYPTO_SESSION_INPUT&&) = &D3D11_AUTHENTICATED_QUERY_CRYPTO_SESSION_INPUT::operator=;
D3D11_AUTHENTICATED_QUERY_CRYPTO_SESSION_OUTPUT& (D3D11_AUTHENTICATED_QUERY_CRYPTO_SESSION_OUTPUT::*_70)(D3D11_AUTHENTICATED_QUERY_CRYPTO_SESSION_OUTPUT&&) = &D3D11_AUTHENTICATED_QUERY_CRYPTO_SESSION_OUTPUT::operator=;
D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_COUNT_OUTPUT& (D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_COUNT_OUTPUT::*_71)(D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_COUNT_OUTPUT&&) = &D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_COUNT_OUTPUT::operator=;
D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_INPUT& (D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_INPUT::*_72)(D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_INPUT&&) = &D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_INPUT::operator=;
D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_OUTPUT& (D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_OUTPUT::*_73)(D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_OUTPUT&&) = &D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_OUTPUT::operator=;
D3D11_AUTHENTICATED_QUERY_UNRESTRICTED_PROTECTED_SHARED_RESOURCE_COUNT_OUTPUT& (D3D11_AUTHENTICATED_QUERY_UNRESTRICTED_PROTECTED_SHARED_RESOURCE_COUNT_OUTPUT::*_74)(D3D11_AUTHENTICATED_QUERY_UNRESTRICTED_PROTECTED_SHARED_RESOURCE_COUNT_OUTPUT&&) = &D3D11_AUTHENTICATED_QUERY_UNRESTRICTED_PROTECTED_SHARED_RESOURCE_COUNT_OUTPUT::operator=;
D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_COUNT_INPUT& (D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_COUNT_INPUT::*_75)(D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_COUNT_INPUT&&) = &D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_COUNT_INPUT::operator=;
D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_COUNT_OUTPUT& (D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_COUNT_OUTPUT::*_76)(D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_COUNT_OUTPUT&&) = &D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_COUNT_OUTPUT::operator=;
D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_INPUT& (D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_INPUT::*_77)(D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_INPUT&&) = &D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_INPUT::operator=;
D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_OUTPUT& (D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_OUTPUT::*_78)(D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_OUTPUT&&) = &D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_OUTPUT::operator=;
struct D3D11_AUTHENTICATED_QUERY_ACESSIBILITY_OUTPUT& (D3D11_AUTHENTICATED_QUERY_ACESSIBILITY_OUTPUT::*_79)(struct D3D11_AUTHENTICATED_QUERY_ACESSIBILITY_OUTPUT&&) = &D3D11_AUTHENTICATED_QUERY_ACESSIBILITY_OUTPUT::operator=;
D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ENCRYPTION_GUID_COUNT_OUTPUT& (D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ENCRYPTION_GUID_COUNT_OUTPUT::*_80)(D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ENCRYPTION_GUID_COUNT_OUTPUT&&) = &D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ENCRYPTION_GUID_COUNT_OUTPUT::operator=;
D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ENCRYPTION_GUID_INPUT& (D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ENCRYPTION_GUID_INPUT::*_81)(D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ENCRYPTION_GUID_INPUT&&) = &D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ENCRYPTION_GUID_INPUT::operator=;
D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ENCRYPTION_GUID_OUTPUT& (D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ENCRYPTION_GUID_OUTPUT::*_82)(D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ENCRYPTION_GUID_OUTPUT&&) = &D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ENCRYPTION_GUID_OUTPUT::operator=;
D3D11_AUTHENTICATED_QUERY_CURRENT_ACCESSIBILITY_ENCRYPTION_OUTPUT& (D3D11_AUTHENTICATED_QUERY_CURRENT_ACCESSIBILITY_ENCRYPTION_OUTPUT::*_83)(D3D11_AUTHENTICATED_QUERY_CURRENT_ACCESSIBILITY_ENCRYPTION_OUTPUT&&) = &D3D11_AUTHENTICATED_QUERY_CURRENT_ACCESSIBILITY_ENCRYPTION_OUTPUT::operator=;
D3D11_AUTHENTICATED_CONFIGURE_INPUT& (D3D11_AUTHENTICATED_CONFIGURE_INPUT::*_84)(D3D11_AUTHENTICATED_CONFIGURE_INPUT&&) = &D3D11_AUTHENTICATED_CONFIGURE_INPUT::operator=;
D3D11_AUTHENTICATED_CONFIGURE_OUTPUT& (D3D11_AUTHENTICATED_CONFIGURE_OUTPUT::*_85)(D3D11_AUTHENTICATED_CONFIGURE_OUTPUT&&) = &D3D11_AUTHENTICATED_CONFIGURE_OUTPUT::operator=;
D3D11_AUTHENTICATED_CONFIGURE_INITIALIZE_INPUT& (D3D11_AUTHENTICATED_CONFIGURE_INITIALIZE_INPUT::*_86)(D3D11_AUTHENTICATED_CONFIGURE_INITIALIZE_INPUT&&) = &D3D11_AUTHENTICATED_CONFIGURE_INITIALIZE_INPUT::operator=;
D3D11_AUTHENTICATED_CONFIGURE_PROTECTION_INPUT& (D3D11_AUTHENTICATED_CONFIGURE_PROTECTION_INPUT::*_87)(D3D11_AUTHENTICATED_CONFIGURE_PROTECTION_INPUT&&) = &D3D11_AUTHENTICATED_CONFIGURE_PROTECTION_INPUT::operator=;
D3D11_AUTHENTICATED_CONFIGURE_CRYPTO_SESSION_INPUT& (D3D11_AUTHENTICATED_CONFIGURE_CRYPTO_SESSION_INPUT::*_88)(D3D11_AUTHENTICATED_CONFIGURE_CRYPTO_SESSION_INPUT&&) = &D3D11_AUTHENTICATED_CONFIGURE_CRYPTO_SESSION_INPUT::operator=;
D3D11_AUTHENTICATED_CONFIGURE_SHARED_RESOURCE_INPUT& (D3D11_AUTHENTICATED_CONFIGURE_SHARED_RESOURCE_INPUT::*_89)(D3D11_AUTHENTICATED_CONFIGURE_SHARED_RESOURCE_INPUT&&) = &D3D11_AUTHENTICATED_CONFIGURE_SHARED_RESOURCE_INPUT::operator=;
D3D11_AUTHENTICATED_CONFIGURE_ACCESSIBLE_ENCRYPTION_INPUT& (D3D11_AUTHENTICATED_CONFIGURE_ACCESSIBLE_ENCRYPTION_INPUT::*_90)(D3D11_AUTHENTICATED_CONFIGURE_ACCESSIBLE_ENCRYPTION_INPUT&&) = &D3D11_AUTHENTICATED_CONFIGURE_ACCESSIBLE_ENCRYPTION_INPUT::operator=;
D3D11_TEX2D_VDOV& (D3D11_TEX2D_VDOV::*_91)(D3D11_TEX2D_VDOV&&) = &D3D11_TEX2D_VDOV::operator=;
D3D11_VIDEO_DECODER_OUTPUT_VIEW_DESC& (D3D11_VIDEO_DECODER_OUTPUT_VIEW_DESC::*_92)(D3D11_VIDEO_DECODER_OUTPUT_VIEW_DESC&&) = &D3D11_VIDEO_DECODER_OUTPUT_VIEW_DESC::operator=;
D3D11_TEX2D_VPIV& (D3D11_TEX2D_VPIV::*_93)(D3D11_TEX2D_VPIV&&) = &D3D11_TEX2D_VPIV::operator=;
D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC& (D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC::*_94)(D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC&&) = &D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC::operator=;
D3D11_TEX2D_VPOV& (D3D11_TEX2D_VPOV::*_95)(D3D11_TEX2D_VPOV&&) = &D3D11_TEX2D_VPOV::operator=;
D3D11_TEX2D_ARRAY_VPOV& (D3D11_TEX2D_ARRAY_VPOV::*_96)(D3D11_TEX2D_ARRAY_VPOV&&) = &D3D11_TEX2D_ARRAY_VPOV::operator=;
D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC& (D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC::*_97)(D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC&&) = &D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC::operator=;
bool (*_98)(const D3D11_VIEWPORT&, const D3D11_VIEWPORT&) = &::operator==;
bool (*_99)(const D3D11_VIEWPORT&, const D3D11_VIEWPORT&) = &::operator!=;
bool (*_100)(const D3D11_BOX&, const D3D11_BOX&) = &::operator==;
bool (*_101)(const D3D11_BOX&, const D3D11_BOX&) = &::operator!=;
unsigned int (*_102)(unsigned int, unsigned int, unsigned int) = &::D3D11CalcSubresource;
struct tagCONNECTDATA& (tagCONNECTDATA::*_103)(struct tagCONNECTDATA&&) = &tagCONNECTDATA::operator=;
IEnumConnections& (IEnumConnections::*_104)(IEnumConnections&&) = &IEnumConnections::operator=;
class IEnumConnections_IEnumConnectionsIEnumConnections : public IEnumConnections { public: IEnumConnections_IEnumConnectionsIEnumConnections(): IEnumConnections() {}; long Next(unsigned long, tagCONNECTDATA*, unsigned long*) { return {}; } long Skip(unsigned long) { return {}; } long Reset() { return {}; } long Clone(IEnumConnections**) { return {}; } long QueryInterface(const _GUID&, void**) { return {}; } unsigned long AddRef() { return {}; } unsigned long Release() { return {}; }  };
extern "C" __declspec(dllexport) void IEnumConnections_IEnumConnections(void* __instance) { ::new (__instance) IEnumConnections_IEnumConnectionsIEnumConnections(); }
IConnectionPoint& (IConnectionPoint::*_105)(IConnectionPoint&&) = &IConnectionPoint::operator=;
class IConnectionPoint_IConnectionPointIConnectionPoint : public IConnectionPoint { public: IConnectionPoint_IConnectionPointIConnectionPoint(): IConnectionPoint() {}; long GetConnectionInterface(_GUID*) { return {}; } long GetConnectionPointContainer(IConnectionPointContainer**) { return {}; } long Advise(IUnknown*, unsigned long*) { return {}; } long Unadvise(unsigned long) { return {}; } long EnumConnections(IEnumConnections**) { return {}; } long QueryInterface(const _GUID&, void**) { return {}; } unsigned long AddRef() { return {}; } unsigned long Release() { return {}; }  };
extern "C" __declspec(dllexport) void IConnectionPoint_IConnectionPoint(void* __instance) { ::new (__instance) IConnectionPoint_IConnectionPointIConnectionPoint(); }
IEnumConnectionPoints& (IEnumConnectionPoints::*_106)(IEnumConnectionPoints&&) = &IEnumConnectionPoints::operator=;
class IEnumConnectionPoints_IEnumConnectionPointsIEnumConnectionPoints : public IEnumConnectionPoints { public: IEnumConnectionPoints_IEnumConnectionPointsIEnumConnectionPoints(): IEnumConnectionPoints() {}; long Next(unsigned long, IConnectionPoint**, unsigned long*) { return {}; } long Skip(unsigned long) { return {}; } long Reset() { return {}; } long Clone(IEnumConnectionPoints**) { return {}; } long QueryInterface(const _GUID&, void**) { return {}; } unsigned long AddRef() { return {}; } unsigned long Release() { return {}; }  };
extern "C" __declspec(dllexport) void IEnumConnectionPoints_IEnumConnectionPoints(void* __instance) { ::new (__instance) IEnumConnectionPoints_IEnumConnectionPointsIEnumConnectionPoints(); }
IConnectionPointContainer& (IConnectionPointContainer::*_107)(IConnectionPointContainer&&) = &IConnectionPointContainer::operator=;
class IConnectionPointContainer_IConnectionPointContainerIConnectionPointContainer : public IConnectionPointContainer { public: IConnectionPointContainer_IConnectionPointContainerIConnectionPointContainer(): IConnectionPointContainer() {}; long EnumConnectionPoints(IEnumConnectionPoints**) { return {}; } long FindConnectionPoint(const _GUID&, IConnectionPoint**) { return {}; } long QueryInterface(const _GUID&, void**) { return {}; } unsigned long AddRef() { return {}; } unsigned long Release() { return {}; }  };
extern "C" __declspec(dllexport) void IConnectionPointContainer_IConnectionPointContainer(void* __instance) { ::new (__instance) IConnectionPointContainer_IConnectionPointContainerIConnectionPointContainer(); }
struct tagLICINFO& (tagLICINFO::*_108)(struct tagLICINFO&&) = &tagLICINFO::operator=;
IClassFactory2& (IClassFactory2::*_109)(IClassFactory2&&) = &IClassFactory2::operator=;
class IClassFactory2_IClassFactory2IClassFactory2 : public IClassFactory2 { public: IClassFactory2_IClassFactory2IClassFactory2(): IClassFactory2() {}; long GetLicInfo(tagLICINFO*) { return {}; } long RequestLicKey(unsigned long, wchar_t**) { return {}; } long CreateInstanceLic(IUnknown*, IUnknown*, const _GUID&, wchar_t*, void**) { return {}; } long CreateInstance(IUnknown*, const _GUID&, void**) { return {}; } long LockServer(int) { return {}; } long QueryInterface(const _GUID&, void**) { return {}; } unsigned long AddRef() { return {}; } unsigned long Release() { return {}; }  };
extern "C" __declspec(dllexport) void IClassFactory2_IClassFactory2(void* __instance) { ::new (__instance) IClassFactory2_IClassFactory2IClassFactory2(); }
IProvideMultipleClassInfo& (IProvideMultipleClassInfo::*_110)(IProvideMultipleClassInfo&&) = &IProvideMultipleClassInfo::operator=;
class IProvideMultipleClassInfo_IProvideMultipleClassInfoIProvideMultipleClassInfo : public IProvideMultipleClassInfo { public: IProvideMultipleClassInfo_IProvideMultipleClassInfoIProvideMultipleClassInfo(): IProvideMultipleClassInfo() {}; long GetMultiTypeInfoCount(unsigned long*) { return {}; } long GetInfoOfIndex(unsigned long, unsigned long, ITypeInfo**, unsigned long*, unsigned long*, _GUID*, _GUID*) { return {}; } long GetGUID(unsigned long, _GUID*) { return {}; } long GetClassInfoA(ITypeInfo**) { return {}; } long QueryInterface(const _GUID&, void**) { return {}; } unsigned long AddRef() { return {}; } unsigned long Release() { return {}; }  };
extern "C" __declspec(dllexport) void IProvideMultipleClassInfo_IProvideMultipleClassInfo(void* __instance) { ::new (__instance) IProvideMultipleClassInfo_IProvideMultipleClassInfoIProvideMultipleClassInfo(); }
class IProvideMultipleClassInfo_IProvideMultipleClassInfo___1__S_IProvideMultipleClassInfoIProvideMultipleClassInfo : public IProvideMultipleClassInfo { public: IProvideMultipleClassInfo_IProvideMultipleClassInfo___1__S_IProvideMultipleClassInfoIProvideMultipleClassInfo(const IProvideMultipleClassInfo& _0): IProvideMultipleClassInfo(_0) {}; long GetMultiTypeInfoCount(unsigned long*) { return {}; } long GetInfoOfIndex(unsigned long, unsigned long, ITypeInfo**, unsigned long*, unsigned long*, _GUID*, _GUID*) { return {}; } long GetGUID(unsigned long, _GUID*) { return {}; } long GetClassInfoA(ITypeInfo**) { return {}; } long QueryInterface(const _GUID&, void**) { return {}; } unsigned long AddRef() { return {}; } unsigned long Release() { return {}; }  };
extern "C" __declspec(dllexport) void IProvideMultipleClassInfo_IProvideMultipleClassInfo___1__S_IProvideMultipleClassInfo(void* __instance, const IProvideMultipleClassInfo& _0) { ::new (__instance) IProvideMultipleClassInfo_IProvideMultipleClassInfo___1__S_IProvideMultipleClassInfoIProvideMultipleClassInfo(_0); }
struct tagCONTROLINFO& (tagCONTROLINFO::*_111)(struct tagCONTROLINFO&&) = &tagCONTROLINFO::operator=;
IOleControl& (IOleControl::*_112)(IOleControl&&) = &IOleControl::operator=;
class IOleControl_IOleControlIOleControl : public IOleControl { public: IOleControl_IOleControlIOleControl(): IOleControl() {}; long GetControlInfo(tagCONTROLINFO*) { return {}; } long OnMnemonic(tagMSG*) { return {}; } long OnAmbientPropertyChange(long) { return {}; } long FreezeEvents(int) { return {}; } long QueryInterface(const _GUID&, void**) { return {}; } unsigned long AddRef() { return {}; } unsigned long Release() { return {}; }  };
extern "C" __declspec(dllexport) void IOleControl_IOleControl(void* __instance) { ::new (__instance) IOleControl_IOleControlIOleControl(); }
struct tagPOINTF& (tagPOINTF::*_113)(struct tagPOINTF&&) = &tagPOINTF::operator=;
IOleControlSite& (IOleControlSite::*_114)(IOleControlSite&&) = &IOleControlSite::operator=;
class IOleControlSite_IOleControlSiteIOleControlSite : public IOleControlSite { public: IOleControlSite_IOleControlSiteIOleControlSite(): IOleControlSite() {}; long OnControlInfoChanged() { return {}; } long LockInPlaceActive(int) { return {}; } long GetExtendedControl(IDispatch**) { return {}; } long TransformCoords(_POINTL*, tagPOINTF*, unsigned long) { return {}; } long TranslateAcceleratorA(tagMSG*, unsigned long) { return {}; } long OnFocus(int) { return {}; } long ShowPropertyFrame() { return {}; } long QueryInterface(const _GUID&, void**) { return {}; } unsigned long AddRef() { return {}; } unsigned long Release() { return {}; }  };
extern "C" __declspec(dllexport) void IOleControlSite_IOleControlSite(void* __instance) { ::new (__instance) IOleControlSite_IOleControlSiteIOleControlSite(); }
struct tagPROPPAGEINFO& (tagPROPPAGEINFO::*_115)(struct tagPROPPAGEINFO&&) = &tagPROPPAGEINFO::operator=;
IPropertyPage& (IPropertyPage::*_116)(IPropertyPage&&) = &IPropertyPage::operator=;
class IPropertyPage_IPropertyPageIPropertyPage : public IPropertyPage { public: IPropertyPage_IPropertyPageIPropertyPage(): IPropertyPage() {}; long SetPageSite(IPropertyPageSite*) { return {}; } long Activate(HWND__*, const tagRECT*, int) { return {}; } long Deactivate() { return {}; } long GetPageInfo(tagPROPPAGEINFO*) { return {}; } long SetObjects(unsigned long, IUnknown**) { return {}; } long Show(unsigned int) { return {}; } long Move(const tagRECT*) { return {}; } long IsPageDirty() { return {}; } long Apply() { return {}; } long Help(const wchar_t*) { return {}; } long TranslateAcceleratorA(tagMSG*) { return {}; } long QueryInterface(const _GUID&, void**) { return {}; } unsigned long AddRef() { return {}; } unsigned long Release() { return {}; }  };
extern "C" __declspec(dllexport) void IPropertyPage_IPropertyPage(void* __instance) { ::new (__instance) IPropertyPage_IPropertyPageIPropertyPage(); }
IPropertyPage2& (IPropertyPage2::*_117)(IPropertyPage2&&) = &IPropertyPage2::operator=;
class IPropertyPage2_IPropertyPage2IPropertyPage2 : public IPropertyPage2 { public: IPropertyPage2_IPropertyPage2IPropertyPage2(): IPropertyPage2() {}; long EditProperty(long) { return {}; } long SetPageSite(IPropertyPageSite*) { return {}; } long Activate(HWND__*, const tagRECT*, int) { return {}; } long Deactivate() { return {}; } long GetPageInfo(tagPROPPAGEINFO*) { return {}; } long SetObjects(unsigned long, IUnknown**) { return {}; } long Show(unsigned int) { return {}; } long Move(const tagRECT*) { return {}; } long IsPageDirty() { return {}; } long Apply() { return {}; } long Help(const wchar_t*) { return {}; } long TranslateAcceleratorA(tagMSG*) { return {}; } long QueryInterface(const _GUID&, void**) { return {}; } unsigned long AddRef() { return {}; } unsigned long Release() { return {}; }  };
extern "C" __declspec(dllexport) void IPropertyPage2_IPropertyPage2(void* __instance) { ::new (__instance) IPropertyPage2_IPropertyPage2IPropertyPage2(); }
class IPropertyPage2_IPropertyPage2___1__S_IPropertyPage2IPropertyPage2 : public IPropertyPage2 { public: IPropertyPage2_IPropertyPage2___1__S_IPropertyPage2IPropertyPage2(const IPropertyPage2& _0): IPropertyPage2(_0) {}; long EditProperty(long) { return {}; } long SetPageSite(IPropertyPageSite*) { return {}; } long Activate(HWND__*, const tagRECT*, int) { return {}; } long Deactivate() { return {}; } long GetPageInfo(tagPROPPAGEINFO*) { return {}; } long SetObjects(unsigned long, IUnknown**) { return {}; } long Show(unsigned int) { return {}; } long Move(const tagRECT*) { return {}; } long IsPageDirty() { return {}; } long Apply() { return {}; } long Help(const wchar_t*) { return {}; } long TranslateAcceleratorA(tagMSG*) { return {}; } long QueryInterface(const _GUID&, void**) { return {}; } unsigned long AddRef() { return {}; } unsigned long Release() { return {}; }  };
extern "C" __declspec(dllexport) void IPropertyPage2_IPropertyPage2___1__S_IPropertyPage2(void* __instance, const IPropertyPage2& _0) { ::new (__instance) IPropertyPage2_IPropertyPage2___1__S_IPropertyPage2IPropertyPage2(_0); }
IPropertyPageSite& (IPropertyPageSite::*_118)(IPropertyPageSite&&) = &IPropertyPageSite::operator=;
class IPropertyPageSite_IPropertyPageSiteIPropertyPageSite : public IPropertyPageSite { public: IPropertyPageSite_IPropertyPageSiteIPropertyPageSite(): IPropertyPageSite() {}; long OnStatusChange(unsigned long) { return {}; } long GetLocaleID(unsigned long*) { return {}; } long GetPageContainer(IUnknown**) { return {}; } long TranslateAcceleratorA(tagMSG*) { return {}; } long QueryInterface(const _GUID&, void**) { return {}; } unsigned long AddRef() { return {}; } unsigned long Release() { return {}; }  };
extern "C" __declspec(dllexport) void IPropertyPageSite_IPropertyPageSite(void* __instance) { ::new (__instance) IPropertyPageSite_IPropertyPageSiteIPropertyPageSite(); }
IPropertyNotifySink& (IPropertyNotifySink::*_119)(IPropertyNotifySink&&) = &IPropertyNotifySink::operator=;
class IPropertyNotifySink_IPropertyNotifySinkIPropertyNotifySink : public IPropertyNotifySink { public: IPropertyNotifySink_IPropertyNotifySinkIPropertyNotifySink(): IPropertyNotifySink() {}; long OnChanged(long) { return {}; } long OnRequestEdit(long) { return {}; } long QueryInterface(const _GUID&, void**) { return {}; } unsigned long AddRef() { return {}; } unsigned long Release() { return {}; }  };
extern "C" __declspec(dllexport) void IPropertyNotifySink_IPropertyNotifySink(void* __instance) { ::new (__instance) IPropertyNotifySink_IPropertyNotifySinkIPropertyNotifySink(); }
struct tagCAUUID& (tagCAUUID::*_120)(struct tagCAUUID&&) = &tagCAUUID::operator=;
ISpecifyPropertyPages& (ISpecifyPropertyPages::*_121)(ISpecifyPropertyPages&&) = &ISpecifyPropertyPages::operator=;
class ISpecifyPropertyPages_ISpecifyPropertyPagesISpecifyPropertyPages : public ISpecifyPropertyPages { public: ISpecifyPropertyPages_ISpecifyPropertyPagesISpecifyPropertyPages(): ISpecifyPropertyPages() {}; long GetPages(tagCAUUID*) { return {}; } long QueryInterface(const _GUID&, void**) { return {}; } unsigned long AddRef() { return {}; } unsigned long Release() { return {}; }  };
extern "C" __declspec(dllexport) void ISpecifyPropertyPages_ISpecifyPropertyPages(void* __instance) { ::new (__instance) ISpecifyPropertyPages_ISpecifyPropertyPagesISpecifyPropertyPages(); }
IPersistMemory& (IPersistMemory::*_122)(IPersistMemory&&) = &IPersistMemory::operator=;
class IPersistMemory_IPersistMemoryIPersistMemory : public IPersistMemory { public: IPersistMemory_IPersistMemoryIPersistMemory(): IPersistMemory() {}; long IsDirty() { return {}; } long Load(void*, unsigned long) { return {}; } long Save(void*, int, unsigned long) { return {}; } long GetSizeMax(unsigned long*) { return {}; } long InitNew() { return {}; } long GetClassID(_GUID*) { return {}; } long QueryInterface(const _GUID&, void**) { return {}; } unsigned long AddRef() { return {}; } unsigned long Release() { return {}; }  };
extern "C" __declspec(dllexport) void IPersistMemory_IPersistMemory(void* __instance) { ::new (__instance) IPersistMemory_IPersistMemoryIPersistMemory(); }
IPersistStreamInit& (IPersistStreamInit::*_123)(IPersistStreamInit&&) = &IPersistStreamInit::operator=;
class IPersistStreamInit_IPersistStreamInitIPersistStreamInit : public IPersistStreamInit { public: IPersistStreamInit_IPersistStreamInitIPersistStreamInit(): IPersistStreamInit() {}; long IsDirty() { return {}; } long Load(IStream*) { return {}; } long Save(IStream*, int) { return {}; } long GetSizeMax(_ULARGE_INTEGER*) { return {}; } long InitNew() { return {}; } long GetClassID(_GUID*) { return {}; } long QueryInterface(const _GUID&, void**) { return {}; } unsigned long AddRef() { return {}; } unsigned long Release() { return {}; }  };
extern "C" __declspec(dllexport) void IPersistStreamInit_IPersistStreamInit(void* __instance) { ::new (__instance) IPersistStreamInit_IPersistStreamInitIPersistStreamInit(); }
IPersistPropertyBag& (IPersistPropertyBag::*_124)(IPersistPropertyBag&&) = &IPersistPropertyBag::operator=;
class IPersistPropertyBag_IPersistPropertyBagIPersistPropertyBag : public IPersistPropertyBag { public: IPersistPropertyBag_IPersistPropertyBagIPersistPropertyBag(): IPersistPropertyBag() {}; long InitNew() { return {}; } long Load(IPropertyBag*, IErrorLog*) { return {}; } long Save(IPropertyBag*, int, int) { return {}; } long GetClassID(_GUID*) { return {}; } long QueryInterface(const _GUID&, void**) { return {}; } unsigned long AddRef() { return {}; } unsigned long Release() { return {}; }  };
extern "C" __declspec(dllexport) void IPersistPropertyBag_IPersistPropertyBag(void* __instance) { ::new (__instance) IPersistPropertyBag_IPersistPropertyBagIPersistPropertyBag(); }
IPicture& (IPicture::*_125)(IPicture&&) = &IPicture::operator=;
class IPicture_IPictureIPicture : public IPicture { public: IPicture_IPictureIPicture(): IPicture() {}; long get_Handle(unsigned int*) { return {}; } long get_hPal(unsigned int*) { return {}; } long get_Type(short*) { return {}; } long get_Width(long*) { return {}; } long get_Height(long*) { return {}; } long Render(HDC__*, long, long, long, long, long, long, long, long, const tagRECT*) { return {}; } long set_hPal(unsigned int) { return {}; } long get_CurDC(HDC__**) { return {}; } long SelectPicture(HDC__*, HDC__**, unsigned int*) { return {}; } long get_KeepOriginalFormat(int*) { return {}; } long put_KeepOriginalFormat(int) { return {}; } long PictureChanged() { return {}; } long SaveAsFile(IStream*, int, long*) { return {}; } long get_Attributes(unsigned long*) { return {}; } long QueryInterface(const _GUID&, void**) { return {}; } unsigned long AddRef() { return {}; } unsigned long Release() { return {}; }  };
extern "C" __declspec(dllexport) void IPicture_IPicture(void* __instance) { ::new (__instance) IPicture_IPictureIPicture(); }
IPicture2& (IPicture2::*_126)(IPicture2&&) = &IPicture2::operator=;
class IPicture2_IPicture2IPicture2 : public IPicture2 { public: IPicture2_IPicture2IPicture2(): IPicture2() {}; long get_Handle(unsigned long long*) { return {}; } long get_hPal(unsigned long long*) { return {}; } long get_Type(short*) { return {}; } long get_Width(long*) { return {}; } long get_Height(long*) { return {}; } long Render(HDC__*, long, long, long, long, long, long, long, long, const tagRECT*) { return {}; } long set_hPal(unsigned long long) { return {}; } long get_CurDC(HDC__**) { return {}; } long SelectPicture(HDC__*, HDC__**, unsigned long long*) { return {}; } long get_KeepOriginalFormat(int*) { return {}; } long put_KeepOriginalFormat(int) { return {}; } long PictureChanged() { return {}; } long SaveAsFile(IStream*, int, long*) { return {}; } long get_Attributes(unsigned long*) { return {}; } long QueryInterface(const _GUID&, void**) { return {}; } unsigned long AddRef() { return {}; } unsigned long Release() { return {}; }  };
extern "C" __declspec(dllexport) void IPicture2_IPicture2(void* __instance) { ::new (__instance) IPicture2_IPicture2IPicture2(); }
IOleInPlaceObjectWindowless& (IOleInPlaceObjectWindowless::*_127)(IOleInPlaceObjectWindowless&&) = &IOleInPlaceObjectWindowless::operator=;
class IOleInPlaceObjectWindowless_IOleInPlaceObjectWindowlessIOleInPlaceObjectWindowless : public IOleInPlaceObjectWindowless { public: IOleInPlaceObjectWindowless_IOleInPlaceObjectWindowlessIOleInPlaceObjectWindowless(): IOleInPlaceObjectWindowless() {}; long OnWindowMessage(unsigned int, unsigned long long, long long, long long*) { return {}; } long GetDropTarget(IDropTarget**) { return {}; } long InPlaceDeactivate() { return {}; } long UIDeactivate() { return {}; } long SetObjectRects(const tagRECT*, const tagRECT*) { return {}; } long ReactivateAndUndo() { return {}; } long GetWindow(HWND__**) { return {}; } long ContextSensitiveHelp(int) { return {}; } long QueryInterface(const _GUID&, void**) { return {}; } unsigned long AddRef() { return {}; } unsigned long Release() { return {}; }  };
extern "C" __declspec(dllexport) void IOleInPlaceObjectWindowless_IOleInPlaceObjectWindowless(void* __instance) { ::new (__instance) IOleInPlaceObjectWindowless_IOleInPlaceObjectWindowlessIOleInPlaceObjectWindowless(); }
IOleInPlaceSiteEx& (IOleInPlaceSiteEx::*_128)(IOleInPlaceSiteEx&&) = &IOleInPlaceSiteEx::operator=;
class IOleInPlaceSiteEx_IOleInPlaceSiteExIOleInPlaceSiteEx : public IOleInPlaceSiteEx { public: IOleInPlaceSiteEx_IOleInPlaceSiteExIOleInPlaceSiteEx(): IOleInPlaceSiteEx() {}; long OnInPlaceActivateEx(int*, unsigned long) { return {}; } long OnInPlaceDeactivateEx(int) { return {}; } long RequestUIActivate() { return {}; } long CanInPlaceActivate() { return {}; } long OnInPlaceActivate() { return {}; } long OnUIActivate() { return {}; } long GetWindowContext(IOleInPlaceFrame**, IOleInPlaceUIWindow**, tagRECT*, tagRECT*, tagOIFI*) { return {}; } long Scroll(tagSIZE) { return {}; } long OnUIDeactivate(int) { return {}; } long OnInPlaceDeactivate() { return {}; } long DiscardUndoState() { return {}; } long DeactivateAndUndo() { return {}; } long OnPosRectChange(const tagRECT*) { return {}; } long GetWindow(HWND__**) { return {}; } long ContextSensitiveHelp(int) { return {}; } long QueryInterface(const _GUID&, void**) { return {}; } unsigned long AddRef() { return {}; } unsigned long Release() { return {}; }  };
extern "C" __declspec(dllexport) void IOleInPlaceSiteEx_IOleInPlaceSiteEx(void* __instance) { ::new (__instance) IOleInPlaceSiteEx_IOleInPlaceSiteExIOleInPlaceSiteEx(); }
IOleInPlaceSiteWindowless& (IOleInPlaceSiteWindowless::*_129)(IOleInPlaceSiteWindowless&&) = &IOleInPlaceSiteWindowless::operator=;
class IOleInPlaceSiteWindowless_IOleInPlaceSiteWindowlessIOleInPlaceSiteWindowless : public IOleInPlaceSiteWindowless { public: IOleInPlaceSiteWindowless_IOleInPlaceSiteWindowlessIOleInPlaceSiteWindowless(): IOleInPlaceSiteWindowless() {}; long CanWindowlessActivate() { return {}; } long GetCapture() { return {}; } long SetCapture(int) { return {}; } long GetFocus() { return {}; } long SetFocus(int) { return {}; } long GetDC(const tagRECT*, unsigned long, HDC__**) { return {}; } long ReleaseDC(HDC__*) { return {}; } long InvalidateRect(const tagRECT*, int) { return {}; } long InvalidateRgn(HRGN__*, int) { return {}; } long ScrollRect(int, int, const tagRECT*, const tagRECT*) { return {}; } long AdjustRect(tagRECT*) { return {}; } long OnDefWindowMessage(unsigned int, unsigned long long, long long, long long*) { return {}; } long OnInPlaceActivateEx(int*, unsigned long) { return {}; } long OnInPlaceDeactivateEx(int) { return {}; } long RequestUIActivate() { return {}; } long CanInPlaceActivate() { return {}; } long OnInPlaceActivate() { return {}; } long OnUIActivate() { return {}; } long GetWindowContext(IOleInPlaceFrame**, IOleInPlaceUIWindow**, tagRECT*, tagRECT*, tagOIFI*) { return {}; } long Scroll(tagSIZE) { return {}; } long OnUIDeactivate(int) { return {}; } long OnInPlaceDeactivate() { return {}; } long DiscardUndoState() { return {}; } long DeactivateAndUndo() { return {}; } long OnPosRectChange(const tagRECT*) { return {}; } long GetWindow(HWND__**) { return {}; } long ContextSensitiveHelp(int) { return {}; } long QueryInterface(const _GUID&, void**) { return {}; } unsigned long AddRef() { return {}; } unsigned long Release() { return {}; }  };
extern "C" __declspec(dllexport) void IOleInPlaceSiteWindowless_IOleInPlaceSiteWindowless(void* __instance) { ::new (__instance) IOleInPlaceSiteWindowless_IOleInPlaceSiteWindowlessIOleInPlaceSiteWindowless(); }
class IOleInPlaceSiteWindowless_IOleInPlaceSiteWindowless___1__S_IOleInPlaceSiteWindowlessIOleInPlaceSiteWindowless : public IOleInPlaceSiteWindowless { public: IOleInPlaceSiteWindowless_IOleInPlaceSiteWindowless___1__S_IOleInPlaceSiteWindowlessIOleInPlaceSiteWindowless(const IOleInPlaceSiteWindowless& _0): IOleInPlaceSiteWindowless(_0) {}; long CanWindowlessActivate() { return {}; } long GetCapture() { return {}; } long SetCapture(int) { return {}; } long GetFocus() { return {}; } long SetFocus(int) { return {}; } long GetDC(const tagRECT*, unsigned long, HDC__**) { return {}; } long ReleaseDC(HDC__*) { return {}; } long InvalidateRect(const tagRECT*, int) { return {}; } long InvalidateRgn(HRGN__*, int) { return {}; } long ScrollRect(int, int, const tagRECT*, const tagRECT*) { return {}; } long AdjustRect(tagRECT*) { return {}; } long OnDefWindowMessage(unsigned int, unsigned long long, long long, long long*) { return {}; } long OnInPlaceActivateEx(int*, unsigned long) { return {}; } long OnInPlaceDeactivateEx(int) { return {}; } long RequestUIActivate() { return {}; } long CanInPlaceActivate() { return {}; } long OnInPlaceActivate() { return {}; } long OnUIActivate() { return {}; } long GetWindowContext(IOleInPlaceFrame**, IOleInPlaceUIWindow**, tagRECT*, tagRECT*, tagOIFI*) { return {}; } long Scroll(tagSIZE) { return {}; } long OnUIDeactivate(int) { return {}; } long OnInPlaceDeactivate() { return {}; } long DiscardUndoState() { return {}; } long DeactivateAndUndo() { return {}; } long OnPosRectChange(const tagRECT*) { return {}; } long GetWindow(HWND__**) { return {}; } long ContextSensitiveHelp(int) { return {}; } long QueryInterface(const _GUID&, void**) { return {}; } unsigned long AddRef() { return {}; } unsigned long Release() { return {}; }  };
extern "C" __declspec(dllexport) void IOleInPlaceSiteWindowless_IOleInPlaceSiteWindowless___1__S_IOleInPlaceSiteWindowless(void* __instance, const IOleInPlaceSiteWindowless& _0) { ::new (__instance) IOleInPlaceSiteWindowless_IOleInPlaceSiteWindowless___1__S_IOleInPlaceSiteWindowlessIOleInPlaceSiteWindowless(_0); }
struct tagExtentInfo& (tagExtentInfo::*_130)(struct tagExtentInfo&&) = &tagExtentInfo::operator=;
struct tagAspectInfo& (tagAspectInfo::*_131)(struct tagAspectInfo&&) = &tagAspectInfo::operator=;
IViewObjectEx& (IViewObjectEx::*_132)(IViewObjectEx&&) = &IViewObjectEx::operator=;
class IViewObjectEx_IViewObjectExIViewObjectEx : public IViewObjectEx { public: IViewObjectEx_IViewObjectExIViewObjectEx(): IViewObjectEx() {}; long GetRect(unsigned long, _RECTL*) { return {}; } long GetViewStatus(unsigned long*) { return {}; } long QueryHitPoint(unsigned long, const tagRECT*, tagPOINT, long, unsigned long*) { return {}; } long QueryHitRect(unsigned long, const tagRECT*, const tagRECT*, long, unsigned long*) { return {}; } long GetNaturalExtent(unsigned long, long, tagDVTARGETDEVICE*, HDC__*, tagExtentInfo*, tagSIZE*) { return {}; } long GetExtent(unsigned long, long, tagDVTARGETDEVICE*, tagSIZE*) { return {}; } long Draw(unsigned long, long, void*, tagDVTARGETDEVICE*, HDC__*, HDC__*, const _RECTL*, const _RECTL*, int (*)(unsigned long long), unsigned long long) { return {}; } long GetColorSet(unsigned long, long, void*, tagDVTARGETDEVICE*, HDC__*, tagLOGPALETTE**) { return {}; } long Freeze(unsigned long, long, void*, unsigned long*) { return {}; } long Unfreeze(unsigned long) { return {}; } long SetAdvise(unsigned long, unsigned long, IAdviseSink*) { return {}; } long GetAdvise(unsigned long*, unsigned long*, IAdviseSink**) { return {}; } long QueryInterface(const _GUID&, void**) { return {}; } unsigned long AddRef() { return {}; } unsigned long Release() { return {}; }  };
extern "C" __declspec(dllexport) void IViewObjectEx_IViewObjectEx(void* __instance) { ::new (__instance) IViewObjectEx_IViewObjectExIViewObjectEx(); }
IOleUndoUnit& (IOleUndoUnit::*_133)(IOleUndoUnit&&) = &IOleUndoUnit::operator=;
class IOleUndoUnit_IOleUndoUnitIOleUndoUnit : public IOleUndoUnit { public: IOleUndoUnit_IOleUndoUnitIOleUndoUnit(): IOleUndoUnit() {}; long Do(IOleUndoManager*) { return {}; } long GetDescription(wchar_t**) { return {}; } long GetUnitType(_GUID*, long*) { return {}; } long OnNextAdd() { return {}; } long QueryInterface(const _GUID&, void**) { return {}; } unsigned long AddRef() { return {}; } unsigned long Release() { return {}; }  };
extern "C" __declspec(dllexport) void IOleUndoUnit_IOleUndoUnit(void* __instance) { ::new (__instance) IOleUndoUnit_IOleUndoUnitIOleUndoUnit(); }
IOleParentUndoUnit& (IOleParentUndoUnit::*_134)(IOleParentUndoUnit&&) = &IOleParentUndoUnit::operator=;
class IOleParentUndoUnit_IOleParentUndoUnitIOleParentUndoUnit : public IOleParentUndoUnit { public: IOleParentUndoUnit_IOleParentUndoUnitIOleParentUndoUnit(): IOleParentUndoUnit() {}; long Open(IOleParentUndoUnit*) { return {}; } long Close(IOleParentUndoUnit*, int) { return {}; } long Add(IOleUndoUnit*) { return {}; } long FindUnit(IOleUndoUnit*) { return {}; } long GetParentState(unsigned long*) { return {}; } long Do(IOleUndoManager*) { return {}; } long GetDescription(wchar_t**) { return {}; } long GetUnitType(_GUID*, long*) { return {}; } long OnNextAdd() { return {}; } long QueryInterface(const _GUID&, void**) { return {}; } unsigned long AddRef() { return {}; } unsigned long Release() { return {}; }  };
extern "C" __declspec(dllexport) void IOleParentUndoUnit_IOleParentUndoUnit(void* __instance) { ::new (__instance) IOleParentUndoUnit_IOleParentUndoUnitIOleParentUndoUnit(); }
class IOleParentUndoUnit_IOleParentUndoUnit___1__S_IOleParentUndoUnitIOleParentUndoUnit : public IOleParentUndoUnit { public: IOleParentUndoUnit_IOleParentUndoUnit___1__S_IOleParentUndoUnitIOleParentUndoUnit(const IOleParentUndoUnit& _0): IOleParentUndoUnit(_0) {}; long Open(IOleParentUndoUnit*) { return {}; } long Close(IOleParentUndoUnit*, int) { return {}; } long Add(IOleUndoUnit*) { return {}; } long FindUnit(IOleUndoUnit*) { return {}; } long GetParentState(unsigned long*) { return {}; } long Do(IOleUndoManager*) { return {}; } long GetDescription(wchar_t**) { return {}; } long GetUnitType(_GUID*, long*) { return {}; } long OnNextAdd() { return {}; } long QueryInterface(const _GUID&, void**) { return {}; } unsigned long AddRef() { return {}; } unsigned long Release() { return {}; }  };
extern "C" __declspec(dllexport) void IOleParentUndoUnit_IOleParentUndoUnit___1__S_IOleParentUndoUnit(void* __instance, const IOleParentUndoUnit& _0) { ::new (__instance) IOleParentUndoUnit_IOleParentUndoUnit___1__S_IOleParentUndoUnitIOleParentUndoUnit(_0); }
IEnumOleUndoUnits& (IEnumOleUndoUnits::*_135)(IEnumOleUndoUnits&&) = &IEnumOleUndoUnits::operator=;
class IEnumOleUndoUnits_IEnumOleUndoUnitsIEnumOleUndoUnits : public IEnumOleUndoUnits { public: IEnumOleUndoUnits_IEnumOleUndoUnitsIEnumOleUndoUnits(): IEnumOleUndoUnits() {}; long Next(unsigned long, IOleUndoUnit**, unsigned long*) { return {}; } long Skip(unsigned long) { return {}; } long Reset() { return {}; } long Clone(IEnumOleUndoUnits**) { return {}; } long QueryInterface(const _GUID&, void**) { return {}; } unsigned long AddRef() { return {}; } unsigned long Release() { return {}; }  };
extern "C" __declspec(dllexport) void IEnumOleUndoUnits_IEnumOleUndoUnits(void* __instance) { ::new (__instance) IEnumOleUndoUnits_IEnumOleUndoUnitsIEnumOleUndoUnits(); }
IOleUndoManager& (IOleUndoManager::*_136)(IOleUndoManager&&) = &IOleUndoManager::operator=;
class IOleUndoManager_IOleUndoManagerIOleUndoManager : public IOleUndoManager { public: IOleUndoManager_IOleUndoManagerIOleUndoManager(): IOleUndoManager() {}; long Open(IOleParentUndoUnit*) { return {}; } long Close(IOleParentUndoUnit*, int) { return {}; } long Add(IOleUndoUnit*) { return {}; } long GetOpenParentState(unsigned long*) { return {}; } long DiscardFrom(IOleUndoUnit*) { return {}; } long UndoTo(IOleUndoUnit*) { return {}; } long RedoTo(IOleUndoUnit*) { return {}; } long EnumUndoable(IEnumOleUndoUnits**) { return {}; } long EnumRedoable(IEnumOleUndoUnits**) { return {}; } long GetLastUndoDescription(wchar_t**) { return {}; } long GetLastRedoDescription(wchar_t**) { return {}; } long Enable(int) { return {}; } long QueryInterface(const _GUID&, void**) { return {}; } unsigned long AddRef() { return {}; } unsigned long Release() { return {}; }  };
extern "C" __declspec(dllexport) void IOleUndoManager_IOleUndoManager(void* __instance) { ::new (__instance) IOleUndoManager_IOleUndoManagerIOleUndoManager(); }
IPointerInactive& (IPointerInactive::*_137)(IPointerInactive&&) = &IPointerInactive::operator=;
class IPointerInactive_IPointerInactiveIPointerInactive : public IPointerInactive { public: IPointerInactive_IPointerInactiveIPointerInactive(): IPointerInactive() {}; long GetActivationPolicy(unsigned long*) { return {}; } long OnInactiveMouseMove(const tagRECT*, long, long, unsigned long) { return {}; } long OnInactiveSetCursor(const tagRECT*, long, long, unsigned long, int) { return {}; } long QueryInterface(const _GUID&, void**) { return {}; } unsigned long AddRef() { return {}; } unsigned long Release() { return {}; }  };
extern "C" __declspec(dllexport) void IPointerInactive_IPointerInactive(void* __instance) { ::new (__instance) IPointerInactive_IPointerInactiveIPointerInactive(); }
struct tagCADWORD& (tagCADWORD::*_138)(struct tagCADWORD&&) = &tagCADWORD::operator=;
IPerPropertyBrowsing& (IPerPropertyBrowsing::*_139)(IPerPropertyBrowsing&&) = &IPerPropertyBrowsing::operator=;
class IPerPropertyBrowsing_IPerPropertyBrowsingIPerPropertyBrowsing : public IPerPropertyBrowsing { public: IPerPropertyBrowsing_IPerPropertyBrowsingIPerPropertyBrowsing(): IPerPropertyBrowsing() {}; long GetDisplayString(long, wchar_t**) { return {}; } long MapPropertyToPage(long, _GUID*) { return {}; } long GetPredefinedStrings(long, tagCALPOLESTR*, tagCADWORD*) { return {}; } long GetPredefinedValue(long, unsigned long, tagVARIANT*) { return {}; } long QueryInterface(const _GUID&, void**) { return {}; } unsigned long AddRef() { return {}; } unsigned long Release() { return {}; }  };
extern "C" __declspec(dllexport) void IPerPropertyBrowsing_IPerPropertyBrowsing(void* __instance) { ::new (__instance) IPerPropertyBrowsing_IPerPropertyBrowsingIPerPropertyBrowsing(); }
struct tagPROPBAG2& (tagPROPBAG2::*_140)(struct tagPROPBAG2&&) = &tagPROPBAG2::operator=;
IPropertyBag2& (IPropertyBag2::*_141)(IPropertyBag2&&) = &IPropertyBag2::operator=;
class IPropertyBag2_IPropertyBag2IPropertyBag2 : public IPropertyBag2 { public: IPropertyBag2_IPropertyBag2IPropertyBag2(): IPropertyBag2() {}; long Read(unsigned long, tagPROPBAG2*, IErrorLog*, tagVARIANT*, long*) { return {}; } long Write(unsigned long, tagPROPBAG2*, tagVARIANT*) { return {}; } long CountProperties(unsigned long*) { return {}; } long GetPropertyInfo(unsigned long, unsigned long, tagPROPBAG2*, unsigned long*) { return {}; } long LoadObject(const wchar_t*, unsigned long, IUnknown*, IErrorLog*) { return {}; } long QueryInterface(const _GUID&, void**) { return {}; } unsigned long AddRef() { return {}; } unsigned long Release() { return {}; }  };
extern "C" __declspec(dllexport) void IPropertyBag2_IPropertyBag2(void* __instance) { ::new (__instance) IPropertyBag2_IPropertyBag2IPropertyBag2(); }
IPersistPropertyBag2& (IPersistPropertyBag2::*_142)(IPersistPropertyBag2&&) = &IPersistPropertyBag2::operator=;
class IPersistPropertyBag2_IPersistPropertyBag2IPersistPropertyBag2 : public IPersistPropertyBag2 { public: IPersistPropertyBag2_IPersistPropertyBag2IPersistPropertyBag2(): IPersistPropertyBag2() {}; long InitNew() { return {}; } long Load(IPropertyBag2*, IErrorLog*) { return {}; } long Save(IPropertyBag2*, int, int) { return {}; } long IsDirty() { return {}; } long GetClassID(_GUID*) { return {}; } long QueryInterface(const _GUID&, void**) { return {}; } unsigned long AddRef() { return {}; } unsigned long Release() { return {}; }  };
extern "C" __declspec(dllexport) void IPersistPropertyBag2_IPersistPropertyBag2(void* __instance) { ::new (__instance) IPersistPropertyBag2_IPersistPropertyBag2IPersistPropertyBag2(); }
IAdviseSinkEx& (IAdviseSinkEx::*_143)(IAdviseSinkEx&&) = &IAdviseSinkEx::operator=;
class IAdviseSinkEx_IAdviseSinkExIAdviseSinkEx : public IAdviseSinkEx { public: IAdviseSinkEx_IAdviseSinkExIAdviseSinkEx(): IAdviseSinkEx() {}; void OnViewStatusChange(unsigned long) {} void OnDataChange(tagFORMATETC*, tagSTGMEDIUM*) {} void OnViewChange(unsigned long, long) {} void OnRename(IMoniker*) {} void OnSave() {} void OnClose() {} long QueryInterface(const _GUID&, void**) { return {}; } unsigned long AddRef() { return {}; } unsigned long Release() { return {}; }  };
extern "C" __declspec(dllexport) void IAdviseSinkEx_IAdviseSinkEx(void* __instance) { ::new (__instance) IAdviseSinkEx_IAdviseSinkExIAdviseSinkEx(); }
struct tagQACONTAINER& (tagQACONTAINER::*_144)(struct tagQACONTAINER&&) = &tagQACONTAINER::operator=;
struct tagQACONTROL& (tagQACONTROL::*_145)(struct tagQACONTROL&&) = &tagQACONTROL::operator=;
IQuickActivate& (IQuickActivate::*_146)(IQuickActivate&&) = &IQuickActivate::operator=;
class IQuickActivate_IQuickActivateIQuickActivate : public IQuickActivate { public: IQuickActivate_IQuickActivateIQuickActivate(): IQuickActivate() {}; long QuickActivate(tagQACONTAINER*, tagQACONTROL*) { return {}; } long SetContentExtent(tagSIZE*) { return {}; } long GetContentExtent(tagSIZE*) { return {}; } long QueryInterface(const _GUID&, void**) { return {}; } unsigned long AddRef() { return {}; } unsigned long Release() { return {}; }  };
extern "C" __declspec(dllexport) void IQuickActivate_IQuickActivate(void* __instance) { ::new (__instance) IQuickActivate_IQuickActivateIQuickActivate(); }
struct _D3D_SHADER_MACRO& (_D3D_SHADER_MACRO::*_147)(struct _D3D_SHADER_MACRO&&) = &_D3D_SHADER_MACRO::operator=;
ID3DDestructionNotifier& (ID3DDestructionNotifier::*_148)(ID3DDestructionNotifier&&) = &ID3DDestructionNotifier::operator=;
class ID3DDestructionNotifier_ID3DDestructionNotifierID3DDestructionNotifier : public ID3DDestructionNotifier { public: ID3DDestructionNotifier_ID3DDestructionNotifierID3DDestructionNotifier(): ID3DDestructionNotifier() {}; long RegisterDestructionCallback(void (*)(void*), void*, unsigned int*) { return {}; } long UnregisterDestructionCallback(unsigned int) { return {}; } long QueryInterface(const _GUID&, void**) { return {}; } unsigned long AddRef() { return {}; } unsigned long Release() { return {}; }  };
extern "C" __declspec(dllexport) void ID3DDestructionNotifier_ID3DDestructionNotifier(void* __instance) { ::new (__instance) ID3DDestructionNotifier_ID3DDestructionNotifierID3DDestructionNotifier(); }
ID3DInclude& (ID3DInclude::*_149)(ID3DInclude&&) = &ID3DInclude::operator=;
class ID3DInclude_ID3DIncludeID3DInclude : public ID3DInclude { public: ID3DInclude_ID3DIncludeID3DInclude(): ID3DInclude() {}; long Open(_D3D_INCLUDE_TYPE, const char*, const void*, const void**, unsigned int*) { return {}; } long Close(const void*) { return {}; }  };
extern "C" __declspec(dllexport) void ID3DInclude_ID3DInclude(void* __instance) { ::new (__instance) ID3DInclude_ID3DIncludeID3DInclude(); }
class ID3DInclude_ID3DInclude___1__S_ID3DIncludeID3DInclude : public ID3DInclude { public: ID3DInclude_ID3DInclude___1__S_ID3DIncludeID3DInclude(const ID3DInclude& _0): ID3DInclude(_0) {}; long Open(_D3D_INCLUDE_TYPE, const char*, const void*, const void**, unsigned int*) { return {}; } long Close(const void*) { return {}; }  };
extern "C" __declspec(dllexport) void ID3DInclude_ID3DInclude___1__S_ID3DInclude(void* __instance, const ID3DInclude& _0) { ::new (__instance) ID3DInclude_ID3DInclude___1__S_ID3DIncludeID3DInclude(_0); }
D3D11_MESSAGE& (D3D11_MESSAGE::*_150)(D3D11_MESSAGE&&) = &D3D11_MESSAGE::operator=;
D3D11_INFO_QUEUE_FILTER_DESC& (D3D11_INFO_QUEUE_FILTER_DESC::*_151)(D3D11_INFO_QUEUE_FILTER_DESC&&) = &D3D11_INFO_QUEUE_FILTER_DESC::operator=;
D3D11_INFO_QUEUE_FILTER& (D3D11_INFO_QUEUE_FILTER::*_152)(D3D11_INFO_QUEUE_FILTER&&) = &D3D11_INFO_QUEUE_FILTER::operator=;
D3D11_RLDO_FLAGS (*_153)(D3D11_RLDO_FLAGS, D3D11_RLDO_FLAGS) = &::operator|;
D3D11_RLDO_FLAGS& (*_154)(D3D11_RLDO_FLAGS&, D3D11_RLDO_FLAGS) = &::operator|=;
D3D11_RLDO_FLAGS (*_155)(D3D11_RLDO_FLAGS, D3D11_RLDO_FLAGS) = &::operator&;
D3D11_RLDO_FLAGS& (*_156)(D3D11_RLDO_FLAGS&, D3D11_RLDO_FLAGS) = &::operator&=;
D3D11_RLDO_FLAGS (*_157)(D3D11_RLDO_FLAGS) = &::operator~;
D3D11_RLDO_FLAGS (*_158)(D3D11_RLDO_FLAGS, D3D11_RLDO_FLAGS) = &::operator^;
D3D11_RLDO_FLAGS& (*_159)(D3D11_RLDO_FLAGS&, D3D11_RLDO_FLAGS) = &::operator^=;
D3D10_RENDER_TARGET_BLEND_DESC1& (D3D10_RENDER_TARGET_BLEND_DESC1::*_160)(D3D10_RENDER_TARGET_BLEND_DESC1&&) = &D3D10_RENDER_TARGET_BLEND_DESC1::operator=;
D3D10_BLEND_DESC1& (D3D10_BLEND_DESC1::*_161)(D3D10_BLEND_DESC1&&) = &D3D10_BLEND_DESC1::operator=;
D3D10_TEXCUBE_ARRAY_SRV1& (D3D10_TEXCUBE_ARRAY_SRV1::*_162)(D3D10_TEXCUBE_ARRAY_SRV1&&) = &D3D10_TEXCUBE_ARRAY_SRV1::operator=;
D3D10_SHADER_RESOURCE_VIEW_DESC1& (D3D10_SHADER_RESOURCE_VIEW_DESC1::*_163)(D3D10_SHADER_RESOURCE_VIEW_DESC1&&) = &D3D10_SHADER_RESOURCE_VIEW_DESC1::operator=;
D3D10_INPUT_ELEMENT_DESC& (D3D10_INPUT_ELEMENT_DESC::*_164)(D3D10_INPUT_ELEMENT_DESC&&) = &D3D10_INPUT_ELEMENT_DESC::operator=;
D3D10_SO_DECLARATION_ENTRY& (D3D10_SO_DECLARATION_ENTRY::*_165)(D3D10_SO_DECLARATION_ENTRY&&) = &D3D10_SO_DECLARATION_ENTRY::operator=;
D3D10_VIEWPORT& (D3D10_VIEWPORT::*_166)(D3D10_VIEWPORT&&) = &D3D10_VIEWPORT::operator=;
D3D10_BOX& (D3D10_BOX::*_167)(D3D10_BOX&&) = &D3D10_BOX::operator=;
D3D10_DEPTH_STENCILOP_DESC& (D3D10_DEPTH_STENCILOP_DESC::*_168)(D3D10_DEPTH_STENCILOP_DESC&&) = &D3D10_DEPTH_STENCILOP_DESC::operator=;
D3D10_DEPTH_STENCIL_DESC& (D3D10_DEPTH_STENCIL_DESC::*_169)(D3D10_DEPTH_STENCIL_DESC&&) = &D3D10_DEPTH_STENCIL_DESC::operator=;
D3D10_BLEND_DESC& (D3D10_BLEND_DESC::*_170)(D3D10_BLEND_DESC&&) = &D3D10_BLEND_DESC::operator=;
D3D10_RASTERIZER_DESC& (D3D10_RASTERIZER_DESC::*_171)(D3D10_RASTERIZER_DESC&&) = &D3D10_RASTERIZER_DESC::operator=;
D3D10_SUBRESOURCE_DATA& (D3D10_SUBRESOURCE_DATA::*_172)(D3D10_SUBRESOURCE_DATA&&) = &D3D10_SUBRESOURCE_DATA::operator=;
D3D10_BUFFER_DESC& (D3D10_BUFFER_DESC::*_173)(D3D10_BUFFER_DESC&&) = &D3D10_BUFFER_DESC::operator=;
extern "C" __declspec(dllexport) void CD3D10_BUFFER_DESC_CD3D10_BUFFER_DESC___1__S_D3D10_BUFFER_DESC(void* __instance, const D3D10_BUFFER_DESC& o) { ::new (__instance) CD3D10_BUFFER_DESC(o); }
extern "C" __declspec(dllexport) void CD3D10_BUFFER_DESC_CD3D10_BUFFER_DESC_i_i___E_D3D10_USAGE_i_i(void* __instance, unsigned int byteWidth, unsigned int bindFlags, D3D10_USAGE usage, unsigned int cpuaccessFlags, unsigned int miscFlags) { ::new (__instance) CD3D10_BUFFER_DESC(byteWidth, bindFlags, usage, cpuaccessFlags, miscFlags); }
extern "C" __declspec(dllexport) void CD3D10_BUFFER_DESC__CD3D10_BUFFER_DESC(CD3D10_BUFFER_DESC*__instance) { __instance->~CD3D10_BUFFER_DESC(); }
struct CD3D10_BUFFER_DESC& (CD3D10_BUFFER_DESC::*_174)(const struct CD3D10_BUFFER_DESC&) = &CD3D10_BUFFER_DESC::operator=;
D3D10_TEXTURE1D_DESC& (D3D10_TEXTURE1D_DESC::*_175)(D3D10_TEXTURE1D_DESC&&) = &D3D10_TEXTURE1D_DESC::operator=;
extern "C" __declspec(dllexport) void CD3D10_TEXTURE1D_DESC_CD3D10_TEXTURE1D_DESC___1__S_D3D10_TEXTURE1D_DESC(void* __instance, const D3D10_TEXTURE1D_DESC& o) { ::new (__instance) CD3D10_TEXTURE1D_DESC(o); }
extern "C" __declspec(dllexport) void CD3D10_TEXTURE1D_DESC__CD3D10_TEXTURE1D_DESC(CD3D10_TEXTURE1D_DESC*__instance) { __instance->~CD3D10_TEXTURE1D_DESC(); }
struct CD3D10_TEXTURE1D_DESC& (CD3D10_TEXTURE1D_DESC::*_176)(const struct CD3D10_TEXTURE1D_DESC&) = &CD3D10_TEXTURE1D_DESC::operator=;
D3D10_TEXTURE2D_DESC& (D3D10_TEXTURE2D_DESC::*_177)(D3D10_TEXTURE2D_DESC&&) = &D3D10_TEXTURE2D_DESC::operator=;
extern "C" __declspec(dllexport) void CD3D10_TEXTURE2D_DESC_CD3D10_TEXTURE2D_DESC___1__S_D3D10_TEXTURE2D_DESC(void* __instance, const D3D10_TEXTURE2D_DESC& o) { ::new (__instance) CD3D10_TEXTURE2D_DESC(o); }
extern "C" __declspec(dllexport) void CD3D10_TEXTURE2D_DESC__CD3D10_TEXTURE2D_DESC(CD3D10_TEXTURE2D_DESC*__instance) { __instance->~CD3D10_TEXTURE2D_DESC(); }
struct CD3D10_TEXTURE2D_DESC& (CD3D10_TEXTURE2D_DESC::*_178)(const struct CD3D10_TEXTURE2D_DESC&) = &CD3D10_TEXTURE2D_DESC::operator=;
D3D10_MAPPED_TEXTURE2D& (D3D10_MAPPED_TEXTURE2D::*_179)(D3D10_MAPPED_TEXTURE2D&&) = &D3D10_MAPPED_TEXTURE2D::operator=;
D3D10_TEXTURE3D_DESC& (D3D10_TEXTURE3D_DESC::*_180)(D3D10_TEXTURE3D_DESC&&) = &D3D10_TEXTURE3D_DESC::operator=;
extern "C" __declspec(dllexport) void CD3D10_TEXTURE3D_DESC_CD3D10_TEXTURE3D_DESC___1__S_D3D10_TEXTURE3D_DESC(void* __instance, const D3D10_TEXTURE3D_DESC& o) { ::new (__instance) CD3D10_TEXTURE3D_DESC(o); }
extern "C" __declspec(dllexport) void CD3D10_TEXTURE3D_DESC__CD3D10_TEXTURE3D_DESC(CD3D10_TEXTURE3D_DESC*__instance) { __instance->~CD3D10_TEXTURE3D_DESC(); }
struct CD3D10_TEXTURE3D_DESC& (CD3D10_TEXTURE3D_DESC::*_181)(const struct CD3D10_TEXTURE3D_DESC&) = &CD3D10_TEXTURE3D_DESC::operator=;
D3D10_MAPPED_TEXTURE3D& (D3D10_MAPPED_TEXTURE3D::*_182)(D3D10_MAPPED_TEXTURE3D&&) = &D3D10_MAPPED_TEXTURE3D::operator=;
D3D10_BUFFER_SRV& (D3D10_BUFFER_SRV::*_183)(D3D10_BUFFER_SRV&&) = &D3D10_BUFFER_SRV::operator=;
D3D10_TEX1D_SRV& (D3D10_TEX1D_SRV::*_184)(D3D10_TEX1D_SRV&&) = &D3D10_TEX1D_SRV::operator=;
D3D10_TEX1D_ARRAY_SRV& (D3D10_TEX1D_ARRAY_SRV::*_185)(D3D10_TEX1D_ARRAY_SRV&&) = &D3D10_TEX1D_ARRAY_SRV::operator=;
D3D10_TEX2D_SRV& (D3D10_TEX2D_SRV::*_186)(D3D10_TEX2D_SRV&&) = &D3D10_TEX2D_SRV::operator=;
D3D10_TEX2D_ARRAY_SRV& (D3D10_TEX2D_ARRAY_SRV::*_187)(D3D10_TEX2D_ARRAY_SRV&&) = &D3D10_TEX2D_ARRAY_SRV::operator=;
D3D10_TEX3D_SRV& (D3D10_TEX3D_SRV::*_188)(D3D10_TEX3D_SRV&&) = &D3D10_TEX3D_SRV::operator=;
D3D10_TEXCUBE_SRV& (D3D10_TEXCUBE_SRV::*_189)(D3D10_TEXCUBE_SRV&&) = &D3D10_TEXCUBE_SRV::operator=;
D3D10_TEX2DMS_SRV& (D3D10_TEX2DMS_SRV::*_190)(D3D10_TEX2DMS_SRV&&) = &D3D10_TEX2DMS_SRV::operator=;
D3D10_TEX2DMS_ARRAY_SRV& (D3D10_TEX2DMS_ARRAY_SRV::*_191)(D3D10_TEX2DMS_ARRAY_SRV&&) = &D3D10_TEX2DMS_ARRAY_SRV::operator=;
D3D10_SHADER_RESOURCE_VIEW_DESC& (D3D10_SHADER_RESOURCE_VIEW_DESC::*_192)(D3D10_SHADER_RESOURCE_VIEW_DESC&&) = &D3D10_SHADER_RESOURCE_VIEW_DESC::operator=;
D3D10_BUFFER_RTV& (D3D10_BUFFER_RTV::*_193)(D3D10_BUFFER_RTV&&) = &D3D10_BUFFER_RTV::operator=;
D3D10_TEX1D_RTV& (D3D10_TEX1D_RTV::*_194)(D3D10_TEX1D_RTV&&) = &D3D10_TEX1D_RTV::operator=;
D3D10_TEX1D_ARRAY_RTV& (D3D10_TEX1D_ARRAY_RTV::*_195)(D3D10_TEX1D_ARRAY_RTV&&) = &D3D10_TEX1D_ARRAY_RTV::operator=;
D3D10_TEX2D_RTV& (D3D10_TEX2D_RTV::*_196)(D3D10_TEX2D_RTV&&) = &D3D10_TEX2D_RTV::operator=;
D3D10_TEX2DMS_RTV& (D3D10_TEX2DMS_RTV::*_197)(D3D10_TEX2DMS_RTV&&) = &D3D10_TEX2DMS_RTV::operator=;
D3D10_TEX2D_ARRAY_RTV& (D3D10_TEX2D_ARRAY_RTV::*_198)(D3D10_TEX2D_ARRAY_RTV&&) = &D3D10_TEX2D_ARRAY_RTV::operator=;
D3D10_TEX2DMS_ARRAY_RTV& (D3D10_TEX2DMS_ARRAY_RTV::*_199)(D3D10_TEX2DMS_ARRAY_RTV&&) = &D3D10_TEX2DMS_ARRAY_RTV::operator=;
D3D10_TEX3D_RTV& (D3D10_TEX3D_RTV::*_200)(D3D10_TEX3D_RTV&&) = &D3D10_TEX3D_RTV::operator=;
D3D10_RENDER_TARGET_VIEW_DESC& (D3D10_RENDER_TARGET_VIEW_DESC::*_201)(D3D10_RENDER_TARGET_VIEW_DESC&&) = &D3D10_RENDER_TARGET_VIEW_DESC::operator=;
D3D10_TEX1D_DSV& (D3D10_TEX1D_DSV::*_202)(D3D10_TEX1D_DSV&&) = &D3D10_TEX1D_DSV::operator=;
D3D10_TEX1D_ARRAY_DSV& (D3D10_TEX1D_ARRAY_DSV::*_203)(D3D10_TEX1D_ARRAY_DSV&&) = &D3D10_TEX1D_ARRAY_DSV::operator=;
D3D10_TEX2D_DSV& (D3D10_TEX2D_DSV::*_204)(D3D10_TEX2D_DSV&&) = &D3D10_TEX2D_DSV::operator=;
D3D10_TEX2D_ARRAY_DSV& (D3D10_TEX2D_ARRAY_DSV::*_205)(D3D10_TEX2D_ARRAY_DSV&&) = &D3D10_TEX2D_ARRAY_DSV::operator=;
D3D10_TEX2DMS_DSV& (D3D10_TEX2DMS_DSV::*_206)(D3D10_TEX2DMS_DSV&&) = &D3D10_TEX2DMS_DSV::operator=;
D3D10_TEX2DMS_ARRAY_DSV& (D3D10_TEX2DMS_ARRAY_DSV::*_207)(D3D10_TEX2DMS_ARRAY_DSV&&) = &D3D10_TEX2DMS_ARRAY_DSV::operator=;
D3D10_DEPTH_STENCIL_VIEW_DESC& (D3D10_DEPTH_STENCIL_VIEW_DESC::*_208)(D3D10_DEPTH_STENCIL_VIEW_DESC&&) = &D3D10_DEPTH_STENCIL_VIEW_DESC::operator=;
D3D10_SAMPLER_DESC& (D3D10_SAMPLER_DESC::*_209)(D3D10_SAMPLER_DESC&&) = &D3D10_SAMPLER_DESC::operator=;
D3D10_QUERY_DESC& (D3D10_QUERY_DESC::*_210)(D3D10_QUERY_DESC&&) = &D3D10_QUERY_DESC::operator=;
D3D10_QUERY_DATA_TIMESTAMP_DISJOINT& (D3D10_QUERY_DATA_TIMESTAMP_DISJOINT::*_211)(D3D10_QUERY_DATA_TIMESTAMP_DISJOINT&&) = &D3D10_QUERY_DATA_TIMESTAMP_DISJOINT::operator=;
D3D10_QUERY_DATA_PIPELINE_STATISTICS& (D3D10_QUERY_DATA_PIPELINE_STATISTICS::*_212)(D3D10_QUERY_DATA_PIPELINE_STATISTICS&&) = &D3D10_QUERY_DATA_PIPELINE_STATISTICS::operator=;
D3D10_QUERY_DATA_SO_STATISTICS& (D3D10_QUERY_DATA_SO_STATISTICS::*_213)(D3D10_QUERY_DATA_SO_STATISTICS&&) = &D3D10_QUERY_DATA_SO_STATISTICS::operator=;
D3D10_COUNTER_DESC& (D3D10_COUNTER_DESC::*_214)(D3D10_COUNTER_DESC&&) = &D3D10_COUNTER_DESC::operator=;
D3D10_COUNTER_INFO& (D3D10_COUNTER_INFO::*_215)(D3D10_COUNTER_INFO&&) = &D3D10_COUNTER_INFO::operator=;
unsigned int (*_216)(unsigned int, unsigned int, unsigned int) = &::D3D10CalcSubresource;
D3D10_MESSAGE& (D3D10_MESSAGE::*_217)(D3D10_MESSAGE&&) = &D3D10_MESSAGE::operator=;
D3D10_INFO_QUEUE_FILTER_DESC& (D3D10_INFO_QUEUE_FILTER_DESC::*_218)(D3D10_INFO_QUEUE_FILTER_DESC&&) = &D3D10_INFO_QUEUE_FILTER_DESC::operator=;
D3D10_INFO_QUEUE_FILTER& (D3D10_INFO_QUEUE_FILTER::*_219)(D3D10_INFO_QUEUE_FILTER&&) = &D3D10_INFO_QUEUE_FILTER::operator=;
struct SharedTextureInfo& (SharedTextureInfo::*_220)(struct SharedTextureInfo&&) = &SharedTextureInfo::operator=;
